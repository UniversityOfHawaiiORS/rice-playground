### Eclipse Workspace Patch 1.0
#P rice
Index: impl/src/main/java/org/kuali/rice/kns/util/KNSConstants.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/util/KNSConstants.java	(revision 5087)
+++ impl/src/main/java/org/kuali/rice/kns/util/KNSConstants.java	(working copy)
@@ -459,6 +459,7 @@
         public static final String UNIVERSAL_USER_EDIT_WORKGROUP = "UNIVERSAL_USER_EDIT_GROUP";
         public static final String WORKFLOW_EXCEPTION_WORKGROUP = "EXCEPTION_GROUP";
         public static final String SUPERVISOR_WORKGROUP = "SUPERVISOR_GROUP";
+        public static final String DEFAULT_COUNTRY = "DEFAULT_COUNTRY";
     }
 
     public static class SystemGroupParameterNames {
@@ -534,4 +535,4 @@
         public static final String PREVIOUSLY_SORTED_COLUMN_INDEX_PARAM = "previouslySortedColumnIndex";
         public static final String VIEWED_PAGE_NUMBER = "viewedPageNumber";
     }
-}
+}
\ No newline at end of file
Index: scripts/upgrades/0.9.3 to 0.9.4/kns-upgrade-0.9.3-to-0.9.4.sql
===================================================================
--- scripts/upgrades/0.9.3 to 0.9.4/kns-upgrade-0.9.3-to-0.9.4.sql	(revision 5073)
+++ scripts/upgrades/0.9.3 to 0.9.4/kns-upgrade-0.9.3-to-0.9.4.sql	(working copy)
@@ -6,4 +6,141 @@
      CONSTRAINT KR_KNS_SESN_DOC_TP1 PRIMARY KEY (SESSION_ID, FDOC_NBR) 
 );
 
-CREATE INDEX KR_KNS_SESN_DOC_TI1 ON KR_KNS_SESN_DOC_T ( LST_UPDATE_DT );
\ No newline at end of file
+CREATE INDEX KR_KNS_SESN_DOC_TI1 ON KR_KNS_SESN_DOC_T ( LST_UPDATE_DT );
+
+CREATE TABLE KR_COUNTRY_T 
+    (POSTAL_CNTRY_CD VARCHAR2(2) NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    POSTAL_CNTRY_NM VARCHAR2(40), 
+    PSTL_CNTRY_RSTRC_IND VARCHAR2(1) NOT NULL, 
+    ACTV_IND VARCHAR2(1) DEFAULT 'Y' NOT NULL) 
+/ 
+ALTER TABLE KR_COUNTRY_T 
+ADD CONSTRAINT KR_COUNTRY_TP1 
+PRIMARY KEY (POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_COUNTRY_T 
+ADD CONSTRAINT KR_COUNTRY_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+
+CREATE TABLE KR_COUNTY_T 
+    (COUNTY_CD VARCHAR2(10) NOT NULL, 
+    STATE_CD VARCHAR2(2) NOT NULL, 
+    POSTAL_CNTRY_CD VARCHAR2(2) DEFAULT 'US' NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    COUNTY_NM VARCHAR2(100), 
+    ACTV_IND VARCHAR2(1)) 
+/ 
+ALTER TABLE KR_COUNTY_T 
+ADD CONSTRAINT KR_COUNTY_TP1 
+PRIMARY KEY (COUNTY_CD, STATE_CD, POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_COUNTY_T 
+ADD CONSTRAINT KR_COUNTY_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+ALTER TABLE KR_COUNTY_T 
+ADD CONSTRAINT KR_COUNTY_TR1 
+FOREIGN KEY (STATE_CD, POSTAL_CNTRY_CD) 
+REFERENCES KR_STATE_T 
+/ 
+
+CREATE TABLE KR_POSTAL_CODE_T 
+    (POSTAL_CD VARCHAR2(20) NOT NULL, 
+    POSTAL_CNTRY_CD VARCHAR2(2) DEFAULT 'US' NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    POSTAL_STATE_CD VARCHAR2(2), 
+    COUNTY_CD VARCHAR2(10), 
+    POSTAL_CITY_NM VARCHAR2(30), 
+    ACTV_IND VARCHAR2(1) DEFAULT 'Y' NOT NULL) 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TP1 
+PRIMARY KEY (POSTAL_CD, POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TR1 
+FOREIGN KEY (POSTAL_CNTRY_CD) 
+REFERENCES KR_COUNTRY_T 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TR2 
+FOREIGN KEY (POSTAL_STATE_CD, POSTAL_CNTRY_CD) 
+REFERENCES KR_STATE_T 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TR3 
+FOREIGN KEY (COUNTY_CD, POSTAL_STATE_CD, POSTAL_CNTRY_CD) 
+REFERENCES KR_COUNTY_T 
+/ 
+
+
+CREATE TABLE KR_STATE_T 
+    (POSTAL_STATE_CD VARCHAR2(2) NOT NULL, 
+    POSTAL_CNTRY_CD VARCHAR2(2) DEFAULT 'US' NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    POSTAL_STATE_NM VARCHAR2(40), 
+    ACTV_IND VARCHAR2(1) DEFAULT 'Y' NOT NULL) 
+/ 
+ALTER TABLE KR_STATE_T 
+ADD CONSTRAINT KR_STATE_TP1 
+PRIMARY KEY (POSTAL_STATE_CD, POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_STATE_T 
+ADD CONSTRAINT KR_STATE_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+ALTER TABLE KR_STATE_T 
+ADD CONSTRAINT KR_STATE_TR1 
+FOREIGN KEY (POSTAL_CNTRY_CD) 
+REFERENCES KR_COUNTRY_T 
+/ 
+
+
+INSERT INTO SH_PARM_T
+VALUES
+('KR-NS','State','STATE', SYS_GUID(), 1,'HELP','default.htm?turl=WordDocuments%2Fstatemaintenancedocument.htm','Help URL for State document.','A','FP_OPERATIONS')
+/
+INSERT INTO SH_PARM_T
+VALUES
+('KR-NS','Country','COUNTRY', SYS_GUID(), 1,'HELP','default.htm?turl=WordDocuments%2Fcountrymaintenancedocument.htm','Help URL for Chart Country.','A','FP_OPERATIONS')
+/
+INSERT INTO SH_PARM_T
+VALUES
+('KR-NS','PostalCode','POSTAL_CODE', SYS_GUID(),1,'HELP','default.htm?turl=WordDocuments%2Fpostalcodemaintenancedocument.htm','Help URL for Postal Code document.','A','FP_OPERATIONS')
+/
+
+INSERT INTO SH_PARM_T
+VALUES
+('KR-NS','All','DEFAULT_COUNTRY',  SYS_GUID(),1,'CONFG','US','Used as the default country code when relating records that do not have a country code to records that do have a country code, e.g. validating a zip code where the country is not collected.','A','FP_OPERATIONS')
+/
+
+INSERT INTO FP_DOC_TYPE_T
+VALUES
+('ZIPC', SYS_GUID(),1,'Postal Code','Y')
+/
+INSERT INTO FP_DOC_TYPE_T
+VALUES
+('STAT', SYS_GUID(),1,'State','Y')
+/
+INSERT INTO FP_DOC_TYPE_T
+VALUES
+('CNTY', SYS_GUID(),1,'County','Y')
+/
+INSERT INTO FP_DOC_TYPE_T
+VALUES
+('CTRY',SYS_GUID(),1,'Country','Y')
+/
+
+COMMIT
+/
+
Index: impl/src/main/java/org/kuali/rice/kns/bo/Country.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/Country.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/Country.java	(revision 0)
@@ -0,0 +1,69 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo;
+
+import org.kuali.rice.kns.bo.ExternalizableBusinessObject;
+
+
+public interface Country extends ExternalizableBusinessObject{
+
+    /**
+     * @param postalCountryCode - The postalCountryCode to set
+     */
+    public abstract void setPostalCountryCode(String postalCountryCode);
+
+    /**
+     * @return Returns the postalCountryCode
+     */
+    public abstract String getPostalCountryCode();
+
+    /**
+     * @param postalCountryName - The postalCountryName to set
+     */
+    public abstract void setPostalCountryName(String postalCountryName);
+
+    /**
+     * @return Returns the postalCountryName
+     */
+    public abstract String getPostalCountryName();
+
+    /**
+     * Gets the postalCountryRestrictedIndicator attribute.
+     * 
+     * @return Returns the postalCountryRestrictedIndicator.
+     */
+    public abstract boolean isPostalCountryRestrictedIndicator();
+
+    /**
+     * Sets the postalCountryRestrictedIndicator attribute value.
+     * 
+     * @param postalCountryRestrictedIndicator The postalCountryRestrictedIndicator to set.
+     */
+    public abstract void setPostalCountryRestrictedIndicator(boolean postalCountryRestrictedIndicator);
+
+    /**
+     * Gets the active attribute. 
+     * @return Returns the active.
+     */
+    public abstract boolean isActive();
+
+    /**
+     * Sets the active attribute value.
+     * @param active The active to set.
+     */
+    public abstract void setActive(boolean active);
+
+}
\ No newline at end of file
Index: impl/src/main/java/org/kuali/rice/kns/service/impl/StateServiceImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/impl/StateServiceImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/impl/StateServiceImpl.java	(revision 0)
@@ -0,0 +1,126 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service.impl;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.log4j.Logger;
+import org.kuali.rice.kns.util.KNSPropertyConstants;
+import org.kuali.rice.kns.bo.State;
+import org.kuali.rice.kns.service.CountryService;
+import org.kuali.rice.kns.service.StateService;
+import org.kuali.rice.kns.bo.BusinessObject;
+import org.kuali.rice.kns.service.KualiModuleService;
+
+public class StateServiceImpl implements StateService {
+    private static Logger LOG = Logger.getLogger(StateServiceImpl.class);
+
+    private KualiModuleService kualiModuleService;
+    private CountryService countryService;
+
+    /**
+     * @see org.kuali.kfs.sys.service.StateService#getByPrimaryId(java.lang.String)
+     */
+    public State getByPrimaryId(String postalStateCode) {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+        return this.getByPrimaryId(postalCountryCode, postalStateCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.StateService#getByPrimaryId(java.lang.String, java.lang.String)
+     */
+    public State getByPrimaryId(String postalCountryCode, String postalStateCode) {
+        if (StringUtils.isBlank(postalCountryCode) || StringUtils.isBlank(postalStateCode)) {
+            LOG.info("neither postalCountryCode nor postalStateCode can be empty String.");
+            return null;
+        }
+
+        Map<String, Object> postalStateMap = new HashMap<String, Object>();
+        postalStateMap.put(KNSPropertyConstants.POSTAL_COUNTRY_CODE, postalCountryCode);
+        postalStateMap.put(KNSPropertyConstants.POSTAL_STATE_CODE, postalStateCode);
+
+        return kualiModuleService.getResponsibleModuleService(State.class).getExternalizableBusinessObject(State.class, postalStateMap);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.StateService#getByPrimaryIdIfNecessary(org.kuali.rice.kns.bo.BusinessObject, java.lang.String,
+     *      org.kuali.kfs.sys.businessobject.State)
+     */
+    public State getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalStateCode, State existingState) {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+
+        return this.getByPrimaryIdIfNecessary(businessObject, postalCountryCode, postalStateCode, existingState);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.StateService#getByPrimaryIdIfNecessary(org.kuali.rice.kns.bo.BusinessObject, java.lang.String,
+     *      java.lang.String, org.kuali.kfs.sys.businessobject.State)
+     */
+    public State getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, String postalStateCode, State existingState) {
+        if (existingState != null) {
+            String existingCountryCode = existingState.getPostalCountryCode();
+            String existingPostalStateCode = existingState.getPostalStateCode();
+            if (StringUtils.equals(postalCountryCode, existingCountryCode) && StringUtils.equals(postalStateCode, existingPostalStateCode)) {
+                return existingState;
+            }
+        }
+
+        return this.getByPrimaryId(postalCountryCode, postalStateCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.StateService#findAllStates()
+     */
+    public List<State> findAllStates() {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+        return this.findAllStates(postalCountryCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.StateService#findAllStates(java.lang.String)
+     */
+    public List<State> findAllStates(String postalCountryCode) {
+        if (StringUtils.isBlank(postalCountryCode)) {
+            throw new IllegalArgumentException("The postalCountryCode cannot be empty String.");
+        }
+
+        Map<String, Object> postalStateMap = new HashMap<String, Object>();
+        postalStateMap.put(KNSPropertyConstants.POSTAL_COUNTRY_CODE, postalCountryCode);
+
+        return kualiModuleService.getResponsibleModuleService(State.class).getExternalizableBusinessObjectsList(State.class, postalStateMap);
+    }
+
+    /**
+     * Sets the kualiModuleService attribute value.
+     * 
+     * @param kualiModuleService The kualiModuleService to set.
+     */
+    public void setKualiModuleService(KualiModuleService kualiModuleService) {
+        this.kualiModuleService = kualiModuleService;
+    }
+
+    /**
+     * Sets the countryService attribute value.
+     * 
+     * @param countryService The countryService to set.
+     */
+    public void setCountryService(CountryService countryService) {
+        this.countryService = countryService;
+    }
+}
Index: impl/src/main/config/ddl/tables/KR_COUNTY_T.table.ddl
===================================================================
--- impl/src/main/config/ddl/tables/KR_COUNTY_T.table.ddl	(revision 0)
+++ impl/src/main/config/ddl/tables/KR_COUNTY_T.table.ddl	(revision 0)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+CREATE TABLE KR_COUNTY_T 
+    (COUNTY_CD VARCHAR2(10) NOT NULL, 
+    STATE_CD VARCHAR2(2) NOT NULL, 
+    POSTAL_CNTRY_CD VARCHAR2(2) DEFAULT 'US' NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    COUNTY_NM VARCHAR2(100), 
+    ACTV_IND VARCHAR2(1)) 
+/ 
+ALTER TABLE KR_COUNTY_T 
+ADD CONSTRAINT KR_COUNTY_TP1 
+PRIMARY KEY (COUNTY_CD, STATE_CD, POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_COUNTY_T 
+ADD CONSTRAINT KR_COUNTY_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+ALTER TABLE KR_COUNTY_T 
+ADD CONSTRAINT KR_COUNTY_TR1 
+FOREIGN KEY (STATE_CD, POSTAL_CNTRY_CD) 
+REFERENCES KR_STATE_T 
+/ 
+
+
Index: impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/County.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/County.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/County.xml	(revision 0)
@@ -0,0 +1,176 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="County" parent="County-parentBean" />
+
+  <bean id="County-parentBean" abstract="true" parent="BusinessObjectEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.CountyImpl" />
+    <property name="inquiryDefinition" >
+      <ref bean="County-inquiryDefinition" />
+    </property>
+    <property name="lookupDefinition" >
+      <ref bean="County-lookupDefinition" />
+    </property>
+    <property name="titleAttribute" value="countyCode" />
+    <property name="objectLabel" value="County" />
+    <property name="attributes" >
+      <list>
+      	<ref bean="County-postalCountryCode" />
+        <ref bean="County-countyCode" />
+        <ref bean="County-stateCode" />
+        <ref bean="County-countyName" />
+        <ref bean="County-active" />
+      </list>
+    </property>
+  </bean>
+  
+  <bean id="County-postalCountryCode" parent="Country-postalCountryCode-parentBean" />
+  
+  <bean id="County-countyCode" parent="County-countyCode-parentBean" />
+
+  <bean id="County-countyCode-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="countyCode" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="County Code" />
+    <property name="shortLabel" value="County Cd." />
+    <property name="maxLength" value="10" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"/>
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="10" />
+    </property>
+    <property name="summary" value="County Abbreviation" />
+    <property name="description" value="The ten digit code for a County" />
+  </bean>
+  
+  <bean id="County-stateCode" parent="County-stateCode-parentBean" />
+
+  <bean id="County-stateCode-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="stateCode" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="State Abbreviation" />
+    <property name="shortLabel" value="State Abbr." />
+    <property name="maxLength" value="2" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"
+            p:exactLength="2" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="2" />
+    </property>
+    <property name="summary" value="State Abbreviation" />
+    <property name="description" value="The two digit code for a state" />
+  </bean>
+  
+  <bean id="County-countyName" parent="County-countyName-parentBean" />
+
+  <bean id="County-countyName-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="countyName" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="County Name" />
+    <property name="shortLabel" value="County Name" />
+    <property name="maxLength" value="100" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"
+            p:allowWhitespace="true" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="25" />
+    </property>
+    <property name="summary" value="County Name" />
+    <property name="description" value="The name assigned to this County." />
+  </bean>
+  
+  <bean id="County-active" parent="County-active-parentBean" />
+
+  <bean id="County-active-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+    <property name="name" value="active" />
+  </bean>
+  
+
+  <bean id="County-inquiryDefinition" parent="County-inquiryDefinition-parentBean" />
+
+  <bean id="County-inquiryDefinition-parentBean" abstract="true" parent="InquiryDefinition">
+    <property name="title" value="County Inquiry" />
+    <property name="inquirySections" >
+      <list>
+        <bean parent="InquirySectionDefinition">
+          <property name="title" value="" />
+          <property name="numberOfColumns" value="1" />
+          <property name="inquiryFields" >
+            <list>
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalCountryCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="countyCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="stateCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="countyName" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="active" />
+            </list>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Business Object Lookup Definition -->
+
+
+  <bean id="County-lookupDefinition" parent="County-lookupDefinition-parentBean" />
+
+  <bean id="County-lookupDefinition-parentBean" abstract="true" parent="LookupDefinition">
+    <property name="title" value="County Code Lookup" />
+    <property name="instructions" value="Lookup a County" />
+    <property name="defaultSort" >
+      <bean parent="SortDefinition">
+        <property name="attributeNames" >
+          <list>
+            <value>countyCode</value>
+          </list>
+        </property>
+      </bean>
+    </property>
+    <property name="lookupFields" >
+      <list>
+      	<bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="countyCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="stateCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="countyName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+    <property name="resultFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="countyCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="stateCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="countyName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+  </bean>
+</beans>
+  
\ No newline at end of file
Index: impl/src/main/resources/org/kuali/rice/kns/config/KNSSpringBeans.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/config/KNSSpringBeans.xml	(revision 5105)
+++ impl/src/main/resources/org/kuali/rice/kns/config/KNSSpringBeans.xml	(working copy)
@@ -1,837 +1,949 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-	Copyright 2006-2007 The Kuali Foundation.
-
-	Licensed under the Educational Community License, Version 1.0 (the "License");
-	you may not use this file except in compliance with the License.
-	You may obtain a copy of the License at
-
-	http://www.opensource.org/licenses/ecl1.php
-
-	Unless required by applicable law or agreed to in writing, software
-	distributed under the License is distributed on an "AS IS" BASIS,
-	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-	See the License for the specific language governing permissions and
-	limitations under the License.
--->
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:aop="http://www.springframework.org/schema/aop"
-       xmlns:tx="http://www.springframework.org/schema/tx"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
-                           http://www.springframework.org/schema/tx
-                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
-                           http://www.springframework.org/schema/aop
-                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
-
-	<import resource="classpath:org/kuali/rice/core/CommonSpringBeans.xml"/>
-	
-	<bean id="knsOjbConfigurer" class="org.kuali.rice.core.ojb.BaseOjbConfigurer">
-		<property name="jcdAliases">
-			<list>
-				<value>knsDataSource</value>
-			</list>
-		</property>
-		<property name="metadataLocation" value="classpath:org/kuali/rice/kns/config/OJB-repository-kns.xml" />
-	</bean>
-	
-	<bean id="knsDataSource" class="org.kuali.rice.core.database.PrimaryDataSourceFactoryBean" lazy-init="true"/>
-
-	<bean id="dbPlatformFactory" class="org.kuali.rice.kns.dbplatform.ConfigurableKualiDBPlatformFactory">
-		<property name="ojbPlatform" value="${datasource.ojb.platform}" />
-		<property name="dataSource" ref="knsDataSource" />
-	</bean>
-
-	<bean id="dbPlatform" factory-bean="dbPlatformFactory" factory-method="getPlatform" />
-
-	<bean id="platformAwareDaoJdbc" abstract="true" class="org.kuali.rice.kns.dao.jdbc.PlatformAwareDaoBaseJdbc">
-		<property name="dataSource" ref="knsDataSource" />
-		<property name="dbPlatform" ref="dbPlatform" />
-	</bean>
-
-	<bean id="platformAwareDao" abstract="true" class="org.kuali.rice.kns.dao.impl.PlatformAwareDaoBaseOjb">
-		<property name="jcdAlias" value="knsDataSource" />
-		<property name="dbPlatform" ref="dbPlatform" />
-	</bean>
-
-	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate" lazy-init="true">
-		<property name="transactionManager">
-			<ref bean="transactionManager" />
-		</property>
-	</bean>
-
-	<bean class="org.kuali.rice.kns.util.spring.NamedOrderedListBean">
-		<property name="name" value="scriptConfigurationFilePaths" />
-		<property name="listItem" value="classpath:org/kuali/rice/kns/dwr-core.xml" />
-	</bean>
-
-	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
-
-	<bean id="transactionAdvisor" class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
-		<property name="classFilter" ref="transactionAdvisorClassFilter" />
-		<property name="transactionInterceptor" ref="transactionInterceptor" />
-	</bean>
-
-	<bean id="transactionAdvisorClassFilter" class="org.kuali.rice.kns.util.spring.ClassOrMethodAnnotationFilter">
-		<constructor-arg value="org.springframework.transaction.annotation.Transactional" />
-	</bean>
-
-	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
-		<property name="transactionManager" ref="transactionManager" />
-		<property name="transactionAttributeSource" ref="transactionAttributeSource" />
-	</bean>
-
-	<bean id="transactionAttributeSource" class="org.kuali.rice.kns.util.spring.AnnotationAndNameMatchingTransactionAttributeSource">
-		<property name="annotationTransactionAttributeSource" ref="annotationTransactionAttributeSource" />
-		<property name="transactionTimeout" value="${transaction.timeout}" />
-	</bean>
-
-	<bean id="annotationTransactionAttributeSource" class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
-
-	<bean id="dataDictionaryService" class="org.kuali.rice.kns.service.impl.DataDictionaryServiceImpl">
-		<property name="kualiConfigurationService" ref="kualiConfigurationService" />
-  	<property name="kualiModuleService" ref="kualiModuleService" />
-		<property name="baselinePackages">
-			<list>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DataDictionaryBaseTypes.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AdHocRoutePerson.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AdHocRouteWorkgroup.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Attachment.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AttributeReferenceDummy.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AttributeReferenceElements.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/BusinessObjectAttributeEntry.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Campus.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/CampusType.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentHeader.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentType.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentTypeAttribute.xml</value>
-
-                <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterNamespace.xml</value>
-                <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterType.xml</value>
-                <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterDetailType.xml</value>
-                <value>classpath:org/kuali/rice/kns/bo/datadictionary/Parameter.xml</value>
-
-                <value>classpath:org/kuali/rice/kns/bo/datadictionary/PessimisticLock.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Note.xml</value>
-				<value>classpath:org/kuali/rice/kns/bo/datadictionary/NoteType.xml</value>
-				
-
-                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterNamespaceMaintenanceDocument.xml</value>
-                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterTypeMaintenanceDocument.xml</value>
-                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterDetailTypeMaintenanceDocument.xml</value>
-                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterMaintenanceDocument.xml</value>
-
-				<value>classpath:org/kuali/rice/kns/document/datadictionary/CampusMaintenanceDocument.xml</value>
-				<value>classpath:org/kuali/rice/kns/document/datadictionary/CampusTypeMaintenanceDocument.xml</value>
-				<value>classpath:org/kuali/rice/kns/document/datadictionary/DocumentTypeMaintenanceDocument.xml</value>
-			</list>
-		</property>
-	</bean>
-
-	<bean id="postDataLoadEncryptionDao" parent="platformAwareDaoJdbc" class="org.kuali.rice.kns.dao.jdbc.PostDataLoadEncryptionDaoJdbc" />
-
-	<bean id="postDataLoadEncryptionService" class="org.kuali.rice.kns.service.impl.PostDataLoadEncryptionServiceImpl">
-		<property name="postDataLoadEncryptionDao" ref="postDataLoadEncryptionDao" />
-		<property name="businessObjectService" ref="businessObjectService" />
-		<property name="encryptionService" ref="encryptionService" />
-	</bean>
-
-	<bean id="businessObjectService" class="org.kuali.rice.kns.service.impl.BusinessObjectServiceImpl">
-		<property name="businessObjectDao">
-			<ref bean="businessObjectDao" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="persistenceService">
-			<ref bean="persistenceService" />
-		</property>
-		<property name="businessObjectMetaDataService">
-			<ref bean="businessObjectMetaDataService" />
-		</property>
-	</bean>
-
-	<bean id="kualiConfigurationService" class="org.kuali.rice.kns.service.impl.KualiConfigurationServiceImpl" />
-
-	<bean id="authorizationService" class="org.kuali.rice.kns.service.impl.AuthorizationServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-	</bean>
-
-	<bean id="kualiModuleService" class="org.kuali.rice.kns.service.impl.KualiModuleServiceImpl" />
-
-	<bean id="mailService" class="org.kuali.rice.kns.service.impl.MailServiceImpl">
-		<property name="mailSender">
-			<ref bean="mailSender" />
-		</property>
-		<property name="batchMailingList" value="${mailing.list.batch}" />
-		<property name="incidentMailingList" value="${kr.incident.mailing.list}" />
-	</bean>
-
-	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
-		<property name="host" value="${mail.relay.server}" />
-	</bean>
-
-	<bean id="knsExceptionIncidentService" class="org.kuali.rice.kns.service.impl.KualiExceptionIncidentServiceImpl">
-	  <property name="mailService"><ref bean="mailService"/></property>
-	  <property name="messageTemplate">
-        <bean class="org.kuali.rice.kns.mail.MailMessage">
-          <!-- The property place holder below must be specified in          -->
-          <!-- common-config-default.xml or any other KNS configuration file -->
-          <property name="fromAddress"><value>${kr.incident.mailing.list}</value></property>
-        </bean>
-	  </property>
-	</bean>
-	
-	<bean id="workflowGroupService" class="org.kuali.rice.kns.workflow.service.impl.WorkflowGroupServiceImpl"></bean>
-
-	<bean id="workflowInfoService" class="org.kuali.rice.kns.workflow.service.impl.KualiWorkflowInfoImpl" />
-
-	<bean id="xmlObjectSerializerService" class="org.kuali.rice.kns.service.impl.XmlObjectSerializerServiceImpl"></bean>
-
-	<bean id="documentService" class="org.kuali.rice.kns.service.impl.DocumentServiceImpl">
-		<property name="documentDao">
-			<ref bean="documentDao" />
-		</property>
-		<property name="documentTypeService">
-			<ref bean="documentTypeService" />
-		</property>
-		<property name="dateTimeService">
-			<ref bean="dateTimeService" />
-		</property>
-		<property name="workflowDocumentService">
-			<ref bean="workflowDocumentService" />
-		</property>
-		<property name="kualiRuleService">
-			<ref bean="kualiRuleService" />
-		</property>
-		<property name="documentHeaderService">
-			<ref bean="documentHeaderService" />
-		</property>
-		<property name="documentAuthorizationService">
-			<ref bean="documentAuthorizationService" />
-		</property>
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="maintenanceDocumentService">
-			<ref bean="maintenanceDocumentService" />
-		</property>
-		<property name="noteService">
-			<ref bean="noteService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-	</bean>
-
-	<bean id="documentHeaderService" class="org.kuali.rice.kns.service.impl.DocumentHeaderServiceImpl">
-		<property name="documentHeaderDao">
-			<ref bean="documentHeaderDao" />
-		</property>
-	</bean>
-
-	<bean id="kualiRuleService" class="org.kuali.rice.kns.service.impl.KualiRuleServiceImpl">
-		<property name="transactionalDocumentDictionaryService">
-			<ref bean="transactionalDocumentDictionaryService" />
-		</property>
-		<property name="maintenanceDocumentDictionaryService">
-			<ref bean="maintenanceDocumentDictionaryService" />
-		</property>
-		<property name="dictionaryValidationService">
-			<ref bean="dictionaryValidationService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-	</bean>
-
-
-	<bean id="dateTimeService" class="org.kuali.rice.kns.service.impl.DateTimeServiceImpl">
-		<property name="sqlDateFormats">
-			<list>
-				<value>yyyy-MM-dd</value>
-				<value>MM/dd/yyyy</value>
-				<value>MM/dd/yy</value>
-				<value>MM-dd-yyyy</value>
-				<value>MM-dd-yy</value>
-			</list>
-		</property>
-		<property name="stringDateFormat" value="MM/dd/yyyy" />
-		<property name="stringDateTimeFormat" value="MM/dd/yyyy hh:mm a" />
-	</bean>
-
-	<bean id="businessObjectDictionaryService" class="org.kuali.rice.kns.service.impl.BusinessObjectDictionaryServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-	</bean>
-
-	<bean id="maintenanceDocumentDictionaryService" class="org.kuali.rice.kns.service.impl.MaintenanceDocumentDictionaryServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-	</bean>
-
-	<bean id="transactionalDocumentDictionaryService" class="org.kuali.rice.kns.service.impl.TransactionalDocumentDictionaryServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-	</bean>
-
-	<bean id="documentTypeService" class="org.kuali.rice.kns.service.impl.DocumentTypeServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-	</bean>
-
-	<bean id="lookupService" class="org.kuali.rice.kns.service.impl.LookupServiceImpl">
-		<property name="lookupDao">
-			<ref bean="lookupDao" />
-		</property>
-		<property name="kualiConfigurationService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="authorizationService">
-			<ref bean="authorizationService" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-	</bean>
-
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+	Copyright 2006-2007 The Kuali Foundation.
+
+	Licensed under the Educational Community License, Version 1.0 (the "License");
+	you may not use this file except in compliance with the License.
+	You may obtain a copy of the License at
+
+	http://www.opensource.org/licenses/ecl1.php
+
+	Unless required by applicable law or agreed to in writing, software
+	distributed under the License is distributed on an "AS IS" BASIS,
+	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+	See the License for the specific language governing permissions and
+	limitations under the License.
+-->
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:aop="http://www.springframework.org/schema/aop"
+       xmlns:tx="http://www.springframework.org/schema/tx"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
+                           http://www.springframework.org/schema/tx
+                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
+                           http://www.springframework.org/schema/aop
+                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
+
+	<import resource="classpath:org/kuali/rice/core/CommonSpringBeans.xml"/>
+	
+	<bean id="knsOjbConfigurer" class="org.kuali.rice.core.ojb.BaseOjbConfigurer">
+		<property name="jcdAliases">
+			<list>
+				<value>knsDataSource</value>
+			</list>
+		</property>
+		<property name="metadataLocation" value="classpath:org/kuali/rice/kns/config/OJB-repository-kns.xml" />
+	</bean>
+	
+	
+	<bean id="knsModuleConfiguration" parent="knsModuleConfiguration-parentBean"/>
+	
+	<bean id="knsModuleConfiguration-parentBean" class="org.kuali.rice.kns.bo.ModuleConfiguration" abstract="true">
+		<property name="namespaceCode" value="KR-KNS" />
+		<property name="initializeDataDictionary" value="true"/>
+		<property name="dataDictionaryService" ref="dataDictionaryService" />
+		<property name="persistenceService" ref="persistenceServiceOjb" />
+        <property name="dataDictionaryPackages">
+			<list>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/AdHocRoutePerson.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/AdHocRouteWorkgroup.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/Attachment.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/AttributeReferenceDummy.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/AttributeReferenceElements.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/BusinessObjectAttributeEntry.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/Campus.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/CampusType.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/Country.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/County.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/DataDictionaryBaseTypes.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentHeader.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentType.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentTypeAttribute.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/EmployeeStatus.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/EmployeeType.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/Note.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/NoteType.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/Parameter.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterDetailType.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterNamespace.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterType.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/PessimisticLock.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/PostalCode.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/State.xml</value>
+				 <value>classpath:org/kuali/rice/kns/bo/datadictionary/UniversalUser.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/CampusMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/CampusTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/CountryMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/CountyMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/DocumentTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/EmployeeStatusMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/EmployeeTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterDetailTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterNamespaceMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/PostalCodeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/StateMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/UniversalUserMaintenanceDocument.xml</value>
+            </list>
+		</property>
+        <property name="packagePrefixes">
+            <list>
+                <value>org.kuali.rice.kns.</value>
+            </list>
+        </property>
+        <property name="externalizableBusinessObjectImplementations">
+            <map>
+	           <entry key="org.kuali.rice.kns.bo.Country" value="org.kuali.rice.kns.bo.CountryImpl" />
+			   <entry key="org.kuali.rice.kns.bo.State" value="org.kuali.rice.kns.bo.StateImpl" />
+			   <entry key="org.kuali.rice.kns.bo.PostalCode" value="org.kuali.rice.kns.bo.PostalCodeImpl" />
+			   <entry key="org.kuali.rice.kns.bo.County" value="org.kuali.rice.kns.bo.CountyImpl" />
+            </map>
+        </property>
+	</bean>
+	
+	
+	<bean id="knsDataSource" class="org.kuali.rice.core.database.PrimaryDataSourceFactoryBean" lazy-init="true"/>
+
+	<bean id="dbPlatformFactory" class="org.kuali.rice.kns.dbplatform.ConfigurableKualiDBPlatformFactory">
+		<property name="ojbPlatform" value="${datasource.ojb.platform}" />
+		<property name="dataSource" ref="knsDataSource" />
+	</bean>
+
+	<bean id="dbPlatform" factory-bean="dbPlatformFactory" factory-method="getPlatform" />
+
+	<bean id="platformAwareDaoJdbc" abstract="true" class="org.kuali.rice.kns.dao.jdbc.PlatformAwareDaoBaseJdbc">
+		<property name="dataSource" ref="knsDataSource" />
+		<property name="dbPlatform" ref="dbPlatform" />
+	</bean>
+
+	<bean id="platformAwareDao" abstract="true" class="org.kuali.rice.kns.dao.impl.PlatformAwareDaoBaseOjb">
+		<property name="jcdAlias" value="knsDataSource" />
+		<property name="dbPlatform" ref="dbPlatform" />
+	</bean>
+
+	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate" lazy-init="true">
+		<property name="transactionManager">
+			<ref bean="transactionManager" />
+		</property>
+	</bean>
+
+	<bean class="org.kuali.rice.kns.util.spring.NamedOrderedListBean">
+		<property name="name" value="scriptConfigurationFilePaths" />
+		<property name="listItem" value="classpath:org/kuali/rice/kns/dwr-core.xml" />
+	</bean>
+
+	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
+
+	<bean id="transactionAdvisor" class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
+		<property name="classFilter" ref="transactionAdvisorClassFilter" />
+		<property name="transactionInterceptor" ref="transactionInterceptor" />
+	</bean>
+
+	<bean id="transactionAdvisorClassFilter" class="org.kuali.rice.kns.util.spring.ClassOrMethodAnnotationFilter">
+		<constructor-arg value="org.springframework.transaction.annotation.Transactional" />
+	</bean>
+
+	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
+		<property name="transactionManager" ref="transactionManager" />
+		<property name="transactionAttributeSource" ref="transactionAttributeSource" />
+	</bean>
+
+	<bean id="transactionAttributeSource" class="org.kuali.rice.kns.util.spring.AnnotationAndNameMatchingTransactionAttributeSource">
+		<property name="annotationTransactionAttributeSource" ref="annotationTransactionAttributeSource" />
+		<property name="transactionTimeout" value="${transaction.timeout}" />
+	</bean>
+
+	<bean id="annotationTransactionAttributeSource" class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
+
+	<bean id="dataDictionaryService" class="org.kuali.rice.kns.service.impl.DataDictionaryServiceImpl">
+		<property name="kualiConfigurationService" ref="kualiConfigurationService" />
+  	<property name="kualiModuleService" ref="kualiModuleService" />
+		<property name="baselinePackages">
+			<list>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DataDictionaryBaseTypes.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AdHocRoutePerson.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AdHocRouteWorkgroup.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Attachment.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AttributeReferenceDummy.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/AttributeReferenceElements.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/BusinessObjectAttributeEntry.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Campus.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/CampusType.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentHeader.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentType.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/DocumentTypeAttribute.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Country.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/County.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/State.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/PostalCode.xml</value>
+
+                <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterNamespace.xml</value>
+                <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterType.xml</value>
+                <value>classpath:org/kuali/rice/kns/bo/datadictionary/ParameterDetailType.xml</value>
+                <value>classpath:org/kuali/rice/kns/bo/datadictionary/Parameter.xml</value>
+
+                <value>classpath:org/kuali/rice/kns/bo/datadictionary/PessimisticLock.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/Note.xml</value>
+				<value>classpath:org/kuali/rice/kns/bo/datadictionary/NoteType.xml</value>
+
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterNamespaceMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterDetailTypeMaintenanceDocument.xml</value>
+                <value>classpath:org/kuali/rice/kns/document/datadictionary/ParameterMaintenanceDocument.xml</value>
+
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/CampusMaintenanceDocument.xml</value>
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/CampusTypeMaintenanceDocument.xml</value>
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/DocumentTypeMaintenanceDocument.xml</value>
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/CountryMaintenanceDocument.xml</value>
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/CountyMaintenanceDocument.xml</value>
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/StateMaintenanceDocument.xml</value>
+				<value>classpath:org/kuali/rice/kns/document/datadictionary/PostalCodeMaintenanceDocument.xml</value>
+			</list>
+		</property>
+	</bean>
+
+	<bean id="postDataLoadEncryptionDao" parent="platformAwareDaoJdbc" class="org.kuali.rice.kns.dao.jdbc.PostDataLoadEncryptionDaoJdbc" />
+
+	<bean id="postDataLoadEncryptionService" class="org.kuali.rice.kns.service.impl.PostDataLoadEncryptionServiceImpl">
+		<property name="postDataLoadEncryptionDao" ref="postDataLoadEncryptionDao" />
+		<property name="businessObjectService" ref="businessObjectService" />
+		<property name="encryptionService" ref="encryptionService" />
+	</bean>
+
+	<bean id="businessObjectService" class="org.kuali.rice.kns.service.impl.BusinessObjectServiceImpl">
+		<property name="businessObjectDao">
+			<ref bean="businessObjectDao" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="persistenceService">
+			<ref bean="persistenceService" />
+		</property>
+		<property name="businessObjectMetaDataService">
+			<ref bean="businessObjectMetaDataService" />
+		</property>
+	</bean>
+
+	<bean id="kualiConfigurationService" class="org.kuali.rice.kns.service.impl.KualiConfigurationServiceImpl" />
+
+	<bean id="authorizationService" class="org.kuali.rice.kns.service.impl.AuthorizationServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+	</bean>
+	
+	<bean id="kualiModuleService" class="org.kuali.rice.kns.service.impl.KualiModuleServiceImpl" />
+
+	<bean id="mailService" class="org.kuali.rice.kns.service.impl.MailServiceImpl">
+		<property name="mailSender">
+			<ref bean="mailSender" />
+		</property>
+		<property name="batchMailingList" value="${mailing.list.batch}" />
+		<property name="incidentMailingList" value="${kr.incident.mailing.list}" />
+	</bean>
+
+	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
+		<property name="host" value="${mail.relay.server}" />
+	</bean>
+
+	<bean id="knsExceptionIncidentService" class="org.kuali.rice.kns.service.impl.KualiExceptionIncidentServiceImpl">
+	  <property name="mailService"><ref bean="mailService"/></property>
+	  <property name="messageTemplate">
+        <bean class="org.kuali.rice.kns.mail.MailMessage">
+          <!-- The property place holder below must be specified in          -->
+          <!-- common-config-default.xml or any other KNS configuration file -->
+          <property name="fromAddress"><value>${kr.incident.mailing.list}</value></property>
+        </bean>
+	  </property>
+	</bean>
+	
+	<bean id="workflowGroupService" class="org.kuali.rice.kns.workflow.service.impl.WorkflowGroupServiceImpl"></bean>
+
+	<bean id="workflowInfoService" class="org.kuali.rice.kns.workflow.service.impl.KualiWorkflowInfoImpl" />
+
+	<bean id="xmlObjectSerializerService" class="org.kuali.rice.kns.service.impl.XmlObjectSerializerServiceImpl"></bean>
+
+	<bean id="documentService" class="org.kuali.rice.kns.service.impl.DocumentServiceImpl">
+		<property name="documentDao">
+			<ref bean="documentDao" />
+		</property>
+		<property name="documentTypeService">
+			<ref bean="documentTypeService" />
+		</property>
+		<property name="dateTimeService">
+			<ref bean="dateTimeService" />
+		</property>
+		<property name="workflowDocumentService">
+			<ref bean="workflowDocumentService" />
+		</property>
+		<property name="kualiRuleService">
+			<ref bean="kualiRuleService" />
+		</property>
+		<property name="documentHeaderService">
+			<ref bean="documentHeaderService" />
+		</property>
+		<property name="documentAuthorizationService">
+			<ref bean="documentAuthorizationService" />
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="maintenanceDocumentService">
+			<ref bean="maintenanceDocumentService" />
+		</property>
+		<property name="noteService">
+			<ref bean="noteService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+	</bean>
+
+	<bean id="documentHeaderService" class="org.kuali.rice.kns.service.impl.DocumentHeaderServiceImpl">
+		<property name="documentHeaderDao">
+			<ref bean="documentHeaderDao" />
+		</property>
+	</bean>
+
+	<bean id="kualiRuleService" class="org.kuali.rice.kns.service.impl.KualiRuleServiceImpl">
+		<property name="transactionalDocumentDictionaryService">
+			<ref bean="transactionalDocumentDictionaryService" />
+		</property>
+		<property name="maintenanceDocumentDictionaryService">
+			<ref bean="maintenanceDocumentDictionaryService" />
+		</property>
+		<property name="dictionaryValidationService">
+			<ref bean="dictionaryValidationService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+	</bean>
+
+
+	<bean id="dateTimeService" class="org.kuali.rice.kns.service.impl.DateTimeServiceImpl">
+		<property name="sqlDateFormats">
+			<list>
+				<value>yyyy-MM-dd</value>
+				<value>MM/dd/yyyy</value>
+				<value>MM/dd/yy</value>
+				<value>MM-dd-yyyy</value>
+				<value>MM-dd-yy</value>
+			</list>
+		</property>
+		<property name="stringDateFormat" value="MM/dd/yyyy" />
+		<property name="stringDateTimeFormat" value="MM/dd/yyyy hh:mm a" />
+	</bean>
+
+	<bean id="businessObjectDictionaryService" class="org.kuali.rice.kns.service.impl.BusinessObjectDictionaryServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+	</bean>
+
+	<bean id="maintenanceDocumentDictionaryService" class="org.kuali.rice.kns.service.impl.MaintenanceDocumentDictionaryServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+	</bean>
+
+	<bean id="transactionalDocumentDictionaryService" class="org.kuali.rice.kns.service.impl.TransactionalDocumentDictionaryServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+	</bean>
+
+	<bean id="documentTypeService" class="org.kuali.rice.kns.service.impl.DocumentTypeServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+	</bean>
+
+	<bean id="lookupService" class="org.kuali.rice.kns.service.impl.LookupServiceImpl">
+		<property name="lookupDao">
+			<ref bean="lookupDao" />
+		</property>
+		<property name="kualiConfigurationService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="authorizationService">
+			<ref bean="authorizationService" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+	</bean>
+
 	<bean id="kimGroupService" class="org.kuali.rice.kns.web.RiceGroupServiceImpl"/>
-
-	<bean id="workflowDocumentService" class="org.kuali.rice.kns.workflow.service.impl.WorkflowDocumentServiceImpl">
-		<property name="workflowInfoService">
-			<ref bean="workflowInfoService" />
-		</property>
-	</bean>
-
-	<bean id="maintenanceDocumentService" class="org.kuali.rice.kns.service.impl.MaintenanceDocumentServiceImpl">
-		<property name="maintenanceDocumentDao">
-			<ref bean="maintenanceDocumentDao" />
-		</property>
-	</bean>
-
-	<bean id="noteService" class="org.kuali.rice.kns.service.impl.NoteServiceImpl">
-		<property name="noteDao">
-			<ref bean="noteDao" />
-		</property>
-		<property name="workflowDocumentService">
-			<ref bean="workflowDocumentService" />
-		</property>
-		<property name="kualiConfigurationService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-	</bean>
-
-	<bean id="attachmentService" class="org.kuali.rice.kns.service.impl.AttachmentServiceImpl">
-		<property name="kualiConfigurationService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-	</bean>
-	
-	<bean id="persistenceStructureServiceJpa" class="org.kuali.rice.kns.service.impl.PersistenceStructureServiceJpaImpl" />
-  
-  	<bean id="persistenceStructureServiceOjb" class="org.kuali.rice.kns.service.impl.PersistenceStructureServiceOjbImpl" />
-
-  	<bean id="persistenceStructureService" class="org.kuali.rice.kns.service.impl.PersistenceStructureServiceImpl">
-		<property name="persistenceStructureServiceJpa" ref="persistenceStructureServiceJpa" />
-    	<property name="persistenceStructureServiceOjb" ref="persistenceStructureServiceOjb" />
-	</bean>
-
-	<bean id="persistenceService" class="org.kuali.rice.kns.service.impl.PersistenceServiceImpl">
-		<property name="persistenceServiceJpa" ref="persistenceServiceJpa" />
-		<property name="persistenceServiceOjb" ref="persistenceServiceOjb" />
-	</bean>
-
-  	<bean id="persistenceServiceJpa" class="org.kuali.rice.kns.service.impl.PersistenceServiceJpaImpl">
-    	<property name="persistenceDao" ref="persistenceDao" />
-  	</bean>
-
-  	<bean id="persistenceServiceOjb" class="org.kuali.rice.kns.service.impl.PersistenceServiceOjbImpl">
-    	<property name="persistenceDao" ref="persistenceDao" />
-    	<property name="moduleService" ref="kualiModuleService" />
-  	</bean>
-  
-	<bean id="persistenceDao" class="org.kuali.rice.kns.dao.proxy.PersistenceDaoProxy">
-    	<property name="persistenceDaoJpa" ref="persistenceDaoJpa" />
-    	<property name="persistenceDaoOjb" ref="persistenceDaoOjb" />
-	</bean>
-
-  <bean id="persistenceDaoJpa" class="org.kuali.rice.kns.dao.impl.PersistenceDaoJpa" />
-
-  <bean id="persistenceDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.PersistenceDaoOjb" />
-	
-	<bean id="dictionaryValidationService" class="org.kuali.rice.kns.service.impl.DictionaryValidationServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="maintenanceDocumentDictionaryService">
-			<ref bean="maintenanceDocumentDictionaryService" />
-		</property>
-		<property name="persistenceService">
-			<ref bean="persistenceService" />
-		</property>
-		<property name="configService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService"/>
-		</property>
-	</bean>
-
-	<bean id="documentAuthorizationService" class="org.kuali.rice.kns.service.impl.DocumentAuthorizationServiceImpl">
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-	</bean>
-
-	<bean id="sequenceAccessorDao" parent="platformAwareDaoJdbc" class="org.kuali.rice.kns.dao.jdbc.SequenceAccessorDaoJdbc" />
-
-	<bean id="sequenceAccessorService" class="org.kuali.rice.kns.service.impl.SequenceAccessorServiceImpl">
-		<property name="sequenceAccessorDao" ref="sequenceAccessorDao" />
-	</bean>
-
-	<bean id="keyValuesService" class="org.kuali.rice.kns.service.impl.KeyValuesServiceImpl">
-		<property name="businessObjectDao">
-			<ref bean="businessObjectDao" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-	</bean>
-
-	<bean id="encryptionService" class="org.kuali.rice.core.service.impl.DemonstrationGradeEncryptionServiceImpl">
-		<property name="secretKey">
-			<value>${encryption.key}</value>
-		</property>
-	</bean>
-
-	<bean id="postProcessorService" class="org.kuali.rice.kns.service.impl.PostProcessorServiceImpl">
-		<property name="documentService">
-			<ref bean="documentService" />
-		</property>
-		<property name="dateTimeService">
-			<ref bean="dateTimeService" />
-		</property>
-	</bean>
-	
-	<bean id="pessimisticLockService" class="org.kuali.rice.kns.service.impl.PessimisticLockServiceImpl">
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-	</bean>
-
-	<bean id="ojbCollectionHelper" class="org.kuali.rice.kns.util.OjbCollectionHelper" />
-
-	<bean id="kualiLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" scope="prototype">
-		<property name="lookupableHelperService">
-			<ref bean="lookupableHelperService" />
-		</property>
-
-	</bean>
-
-	<bean id="lookupableHelperService" class="org.kuali.rice.kns.lookup.KualiLookupableHelperServiceImpl" scope="prototype">
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="businessObjectDictionaryService">
-			<ref bean="businessObjectDictionaryService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="encryptionService">
-			<ref bean="encryptionService" />
-		</property>
-		<property name="lookupService">
-			<ref bean="lookupService" />
-		</property>
-		<property name="businessObjectMetaDataService">
-			<ref bean="businessObjectMetaDataService" />
-		</property>
-		<property name="sequenceAccessorService">
-			<ref bean="sequenceAccessorService" />
-		</property>
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="lookupResultsService">
-			<ref bean="lookupResultsService" />
-		</property>
-	</bean>
-
-	<bean id="lookupResultsService" class="org.kuali.rice.kns.lookup.LookupResultsServiceImpl">
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="persistedLookupMetadataDao">
-			<ref bean="persistedLookupMetadataDao" />
-		</property>
-	</bean>
-	
-  <bean id="persistedLookupMetadataDao" class="org.kuali.rice.kns.dao.proxy.PersistedLookupMetadataDaoProxy">
-    <property name="persistedLookupMetadataDaoJpa" ref="persistedLookupMetadataDaoJpa" />
-    <property name="persistedLookupMetadataDaoOjb" ref="persistedLookupMetadataDaoOjb" />
-  </bean>
-  
-	<bean id="persistedLookupMetadataDaoJpa" class="org.kuali.rice.kns.dao.impl.PersistedLookupMetadataDaoJpa" />
-  
-	<bean id="persistedLookupMetadataDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.PersistedLookupMetadataDaoOjb" />
-	<bean id="businessObjectMetaDataService" class="org.kuali.rice.kns.service.impl.BusinessObjectMetaDataServiceImpl">
-		<property name="businessObjectDictionaryService">
-			<ref bean="businessObjectDictionaryService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="kualiModuleService">
-			<ref bean="kualiModuleService" />
-		</property>
-	</bean>
-
-    <bean id="parameterLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" parent="kualiLookupable">
-        <property name="lookupableHelperService">
-            <bean class="org.kuali.rice.kns.lookup.ParameterLookupableHelperServiceImpl"
-                parent="lookupableHelperService">
-            </bean>
-        </property>
-    </bean>
-
-    <!-- placeholder so applications can override without making DD changes -->
-    <bean id="parameterDetailTypeLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" parent="kualiLookupable">
-        <property name="lookupableHelperService">
-            <bean class="org.kuali.rice.kns.lookup.ParameterDetailTypeLookupableHelperServiceImpl"
-                parent="lookupableHelperService">
-            </bean>
-        </property>
-    </bean>
-
-	<bean id="workflowLookupable" class="org.kuali.rice.kns.workflow.attribute.WorkflowLookupableImpl" scope="prototype">
-		<property name="configurationService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-		<property name="businessObjectDictionaryService">
-			<ref bean="businessObjectDictionaryService" />
-		</property>
-	</bean>
-
-	<bean id="pessimisticLockLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" scope="prototype">
-		<property name="lookupableHelperService">
-			<ref bean="pessimisticLockLookupableHelperService" />
-		</property>
-	</bean>
-    
-	<bean id="pessimisticLockLookupableHelperService" class="org.kuali.rice.kns.lookup.PessimisticLockLookupableHelperServiceImpl" scope="prototype">
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="businessObjectDictionaryService">
-			<ref bean="businessObjectDictionaryService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="encryptionService">
-			<ref bean="encryptionService" />
-		</property>
-		<property name="lookupService">
-			<ref bean="lookupService" />
-		</property>
-		<property name="businessObjectMetaDataService">
-			<ref bean="businessObjectMetaDataService" />
-		</property>
-		<property name="sequenceAccessorService">
-			<ref bean="sequenceAccessorService" />
-		</property>
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="lookupResultsService">
-			<ref bean="lookupResultsService" />
-		</property>
-	</bean>
-
-		<bean id="sessionDocumentService" class="org.kuali.rice.kns.service.impl.SessionDocumentServiceImpl">
-		<property name="maxCacheSize" value="${session.document.cache.size}" />
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="sessionDocumentDao">
-			<ref bean="sessionDocumentDao" />
-		</property>
-	</bean>
-	<!-- Since these beans are not a singletons, Spring does not inject their static
-		members until the first one is created. This bean causes one to be created.
-	-->
-	<bean id="springStatefulStaticInitializer" class="java.util.ArrayList">
-		<constructor-arg>
-			<list>
-				<ref bean="kualiLookupable" />
-				<ref bean="workflowLookupable" />
-			</list>
-		</constructor-arg>
-	</bean>
-
-	<bean id="lookupUtils" class="org.kuali.rice.kns.lookup.LookupUtils">
-		<property name="businessObjectDictionaryService">
-			<ref bean="businessObjectDictionaryService" />
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="businessObjectMetaDataService">
-			<ref bean="businessObjectMetaDataService" />
-		</property>
-        <property name="kualiConfigurationService" ref="kualiConfigurationService" />
-	</bean>
-
-	<bean id="kualiInquirable" class="org.kuali.rice.kns.inquiry.KualiInquirableImpl" scope="prototype">
-		<property name="kualiConfigurationService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-	</bean>
-
-	<bean id="confirmationQuestion" class="org.kuali.rice.kns.question.ConfirmationQuestion" scope="prototype"/>
-
-	<bean id="maintenanceDocumentRuleBase" class="org.kuali.rice.kns.maintenance.rules.MaintenanceDocumentRuleBase" abstract="true">
-		<property name="configService">
-			<ref bean="kualiConfigurationService" />
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="dictionaryValidationService">
-			<ref bean="dictionaryValidationService" />
-		</property>
-		<property name="documentAuthorizationService">
-			<ref bean="documentAuthorizationService" />
-		</property>
-		<property name="workflowDocumentService">
-			<ref bean="workflowDocumentService" />
-		</property>
-		<property name="boDictionaryService">
-			<ref bean="businessObjectDictionaryService" />
-		</property>
-		<property name="ddService">
-			<ref bean="dataDictionaryService" />
-		</property>
-		<property name="boService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="maintDocDictionaryService">
-			<ref bean="maintenanceDocumentDictionaryService" />
-		</property>
-		<property name="persistenceService">
-			<ref bean="persistenceService" />
-		</property>
-	</bean>
-
-	<bean id="documentDao" class="org.kuali.rice.kns.dao.proxy.DocumentDaoProxy">
-		<property name="businessObjectDao" ref="businessObjectDao" />
-    <property name="documentDaoJpa" ref="documentDaoJpa" />
-    <property name="documentDaoOjb" ref="documentDaoOjb" />
-	</bean>
-
-  <bean id="documentDaoJpa" class="org.kuali.rice.kns.dao.impl.DocumentDaoJpa">
-    <property name="businessObjectDao" ref="businessObjectDao" />
-  </bean>
-
-  <bean id="documentDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.DocumentDaoOjb">
-    <property name="businessObjectDao" ref="businessObjectDao" />
-  </bean>
-
-  <bean id="documentHeaderDao" class="org.kuali.rice.kns.dao.proxy.DocumentHeaderDaoProxy">
-    <property name="documentHeaderDaoJpa" ref="documentHeaderDaoJpa" />
-    <property name="documentHeaderDaoOjb" ref="documentHeaderDaoOjb" />
-  </bean>
-  
-  <bean id="documentHeaderDaoJpa" class="org.kuali.rice.kns.dao.impl.DocumentHeaderDaoJpa" />
-	
-	<bean id="documentHeaderDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.DocumentHeaderDaoOjb" />
-
-  <bean id="lookupDao" class="org.kuali.rice.kns.dao.proxy.LookupDaoProxy">
-    <property name="lookupDaoJpa" ref="lookupDaoJpa" />
-    <property name="lookupDaoOjb" ref="lookupDaoOjb" />
-  </bean>
-  
-  <bean id="lookupDaoJpa" class="org.kuali.rice.kns.dao.impl.LookupDaoJpa">
-    <property name="persistenceStructureService" ref="persistenceStructureService" />
-    <property name="dateTimeService" ref="dateTimeService" />
-  </bean>
-   
-  <bean id="lookupDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.LookupDaoOjb">
-    <property name="persistenceStructureService" ref="persistenceStructureService" />
-		<property name="dateTimeService" ref="dateTimeService" />
-	</bean>
- 
-  <bean id="maintenanceDocumentDao" class="org.kuali.rice.kns.dao.proxy.MaintenanceDocumentDaoProxy">
-    <property name="maintenanceDocumentDaoJpa" ref="maintenanceDocumentDaoJpa" />
-    <property name="maintenanceDocumentDaoOjb" ref="maintenanceDocumentDaoOjb" />
-  </bean>
-
-	<bean id="maintenanceDocumentDaoJpa" class="org.kuali.rice.kns.dao.impl.MaintenanceDocumentDaoJpa" />
-
-  <bean id="maintenanceDocumentDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.MaintenanceDocumentDaoOjb" />
-
-  <bean id="noteDao" class="org.kuali.rice.kns.dao.proxy.NoteDaoProxy">
-    <property name="noteDaoJpa" ref="noteDaoJpa" />
-    <property name="noteDaoOjb" ref="noteDaoOjb" />
-  </bean>
-
-	<bean id="noteDaoJpa" class="org.kuali.rice.kns.dao.impl.NoteDaoJpa" />
-
-  <bean id="noteDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.NoteDaoOjb" />
-
-  <bean id="businessObjectDao" class="org.kuali.rice.kns.dao.proxy.BusinessObjectDaoProxy">
-    <property name="businessObjectDaoJpa" ref="businessObjectDaoJpa" />
-    <property name="businessObjectDaoOjb" ref="businessObjectDaoOjb" />
-  </bean>
-
-  <bean id="businessObjectDaoJpa" class="org.kuali.rice.kns.dao.impl.BusinessObjectDaoJpa">
-    <property name="persistenceStructureService" ref="persistenceStructureService" />
-  </bean>
-
-	<bean id="businessObjectDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.BusinessObjectDaoOjb">
-		<property name="persistenceStructureService" ref="persistenceStructureService" />
-	</bean>
-	
-	<bean id="sessionDocumentDao" class="org.kuali.rice.kns.dao.proxy.SessionDocumentDaoProxy">
-    	<property name="sessionDocumentDaoJpa" ref="sessionDocumentDaoJpa" />
-    	<property name="sessionDocumentDaoOjb" ref="sessionDocumentDaoOjb" />
-  	</bean>
-  
-    <bean id="sessionDocumentDaoJpa" class="org.kuali.rice.kns.dao.impl.SessionDocumentDaoJpa" />
-	
-	<bean id="sessionDocumentDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.SessionDocumentDaoOjb" />
-	
-	<bean id="inactivationBlockingDetectionService" class="org.kuali.rice.kns.service.impl.InactivationBlockingDetectionServiceImpl">
-		<property name="businessObjectMetaDataService">
-			<ref bean="businessObjectMetaDataService"/>
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-	</bean>
-	
-	<bean id="inactivationBlockingDisplayService" class="org.kuali.rice.kns.service.impl.InactivationBlockingDisplayServiceImpl">
-		<property name="persistenceService">
-			<ref bean="persistenceService"/>
-		</property>
-		<property name="dataDictionaryService">
-			<ref bean="dataDictionaryService"/>
-		</property>
-		<property name="persistenceStructureService">
-			<ref bean="persistenceStructureService" />
-		</property>
-	</bean>
-	<bean id="kimPermissionTypeService" class="org.kuali.rice.kns.service.impl.DocumentTypePermissionTypeServiceImpl" />
-
-	<bean id="documentStatusComponentAttributePermissionTypeService" class="org.kuali.rice.kns.service.impl.DocumentStatusComponentAttributePermissionTypeServiceImpl" >
-    	<property name="kimAttributesTranslators">
-    		<list>
-				<bean class="org.kuali.rice.kns.service.impl.DocumentStatusComponentAttributePermissionTypeTranslator">
-					<property name="supportedAttributeNames">
-						<list>
-							<value>Document Number</value>
-							<value>Property Name</value>
-							<value>Component</value>
-						</list>
-					</property>
-					<property name="resultAttributeNames">
-						<list>
-							<value>Document Type Name</value>
-							<value>Route Status Code</value>
-							<value>Route Node Name</value>
-						</list>
-					</property>
-			    </bean>
-    		</list>
-    	</property>
-	</bean>
-			
-  <!-- START JPA CONFIGURATION -->
-
-  <!-- Used for @PersistenceContext auto-injection -->
-  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
-
-  <bean id="entityManagerFactory" class="org.kuali.rice.core.jpa.spring.RiceEntityManagerProxyFactoryBean">    
-    <constructor-arg value="rice.kns"/>
-    <constructor-arg ref="knsDataSource"/>
-  </bean>
-
-  <!-- Used for @Transactional so you don't have to wire services up in here -->
-  <tx:annotation-driven transaction-manager="transactionManager"/>
-  
-  <bean id="NoResultExceptionInterceptor" class="org.kuali.rice.core.jpa.spring.NoResultExceptionInterceptor" />
-
-  <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
-    <property name="interceptorNames">
-      <list>
-        <idref local="NoResultExceptionInterceptor" />
-      </list>
-    </property>
-    <property name="beanNames">
-      <list>
-        <idref local="businessObjectDaoJpa"/>        
-        <idref local="documentDaoJpa"/>
-        <idref local="documentHeaderDao"/>        
-        <idref local="lookupDaoJpa"/>
-        <idref local="persistenceDaoJpa"/>
-        <idref local="maintenanceDocumentDao"/>
-        <idref local="noteDao"/>
-        <idref local="persistedLookupMetadataDao"/>
-        <idref local="sessionDocumentDao"/>        
-        <idref local="postProcessorService"/>
-      </list>
-    </property>
-  </bean>
-  
-  <!-- END JPA CONFIGURATION -->
-
-	
-	<bean id="documentSerializerService" class="org.kuali.rice.kns.service.impl.DocumentSerializerServiceImpl">
-		<property name="persistenceService">
-			<ref bean="persistenceService" />
-		</property>
-		<property name="xmlObjectSerializerService">
-			<ref bean="xmlObjectSerializerService"/>
-		</property>
-	</bean>
-
-	<bean id="businessObjectSerializerService" class="org.kuali.rice.kns.service.impl.BusinessObjectSerializerServiceImpl">
-		<property name="persistenceService">
-			<ref bean="persistenceService" />
-		</property>
-		<property name="xmlObjectSerializerService">
-			<ref bean="xmlObjectSerializerService"/>
-		</property>
-	</bean>	
-	
-</beans>
-
+
+	<bean id="workflowDocumentService" class="org.kuali.rice.kns.workflow.service.impl.WorkflowDocumentServiceImpl">
+		<property name="workflowInfoService">
+			<ref bean="workflowInfoService" />
+		</property>
+	</bean>
+
+	<bean id="maintenanceDocumentService" class="org.kuali.rice.kns.service.impl.MaintenanceDocumentServiceImpl">
+		<property name="maintenanceDocumentDao">
+			<ref bean="maintenanceDocumentDao" />
+		</property>
+	</bean>
+
+	<bean id="noteService" class="org.kuali.rice.kns.service.impl.NoteServiceImpl">
+		<property name="noteDao">
+			<ref bean="noteDao" />
+		</property>
+		<property name="workflowDocumentService">
+			<ref bean="workflowDocumentService" />
+		</property>
+		<property name="kualiConfigurationService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+	</bean>
+
+	<bean id="attachmentService" class="org.kuali.rice.kns.service.impl.AttachmentServiceImpl">
+		<property name="kualiConfigurationService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+	</bean>
+	
+	<bean id="persistenceStructureServiceJpa" class="org.kuali.rice.kns.service.impl.PersistenceStructureServiceJpaImpl" />
+  
+  	<bean id="persistenceStructureServiceOjb" class="org.kuali.rice.kns.service.impl.PersistenceStructureServiceOjbImpl" />
+
+  	<bean id="persistenceStructureService" class="org.kuali.rice.kns.service.impl.PersistenceStructureServiceImpl">
+		<property name="persistenceStructureServiceJpa" ref="persistenceStructureServiceJpa" />
+    	<property name="persistenceStructureServiceOjb" ref="persistenceStructureServiceOjb" />
+	</bean>
+
+	<bean id="persistenceService" class="org.kuali.rice.kns.service.impl.PersistenceServiceImpl">
+		<property name="persistenceServiceJpa" ref="persistenceServiceJpa" />
+		<property name="persistenceServiceOjb" ref="persistenceServiceOjb" />
+	</bean>
+
+  	<bean id="persistenceServiceJpa" class="org.kuali.rice.kns.service.impl.PersistenceServiceJpaImpl">
+    	<property name="persistenceDao" ref="persistenceDao" />
+  	</bean>
+
+  	<bean id="persistenceServiceOjb" class="org.kuali.rice.kns.service.impl.PersistenceServiceOjbImpl">
+    	<property name="persistenceDao" ref="persistenceDao" />
+    	<property name="moduleService" ref="kualiModuleService" />
+  	</bean>
+  
+	<bean id="persistenceDao" class="org.kuali.rice.kns.dao.proxy.PersistenceDaoProxy">
+    	<property name="persistenceDaoJpa" ref="persistenceDaoJpa" />
+    	<property name="persistenceDaoOjb" ref="persistenceDaoOjb" />
+	</bean>
+
+  <bean id="persistenceDaoJpa" class="org.kuali.rice.kns.dao.impl.PersistenceDaoJpa" />
+
+  <bean id="persistenceDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.PersistenceDaoOjb" />
+	
+	<bean id="dictionaryValidationService" class="org.kuali.rice.kns.service.impl.DictionaryValidationServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="maintenanceDocumentDictionaryService">
+			<ref bean="maintenanceDocumentDictionaryService" />
+		</property>
+		<property name="persistenceService">
+			<ref bean="persistenceService" />
+		</property>
+		<property name="configService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService"/>
+		</property>
+	</bean>
+
+	<bean id="documentAuthorizationService" class="org.kuali.rice.kns.service.impl.DocumentAuthorizationServiceImpl">
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+	</bean>
+
+	<bean id="sequenceAccessorDao" parent="platformAwareDaoJdbc" class="org.kuali.rice.kns.dao.jdbc.SequenceAccessorDaoJdbc" />
+
+	<bean id="sequenceAccessorService" class="org.kuali.rice.kns.service.impl.SequenceAccessorServiceImpl">
+		<property name="sequenceAccessorDao" ref="sequenceAccessorDao" />
+	</bean>
+
+	<bean id="keyValuesService" class="org.kuali.rice.kns.service.impl.KeyValuesServiceImpl">
+		<property name="businessObjectDao">
+			<ref bean="businessObjectDao" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+	</bean>
+
+	<bean id="encryptionService" class="org.kuali.rice.core.service.impl.DemonstrationGradeEncryptionServiceImpl">
+		<property name="secretKey">
+			<value>${encryption.key}</value>
+		</property>
+	</bean>
+
+	<bean id="postProcessorService" class="org.kuali.rice.kns.service.impl.PostProcessorServiceImpl">
+		<property name="documentService">
+			<ref bean="documentService" />
+		</property>
+		<property name="dateTimeService">
+			<ref bean="dateTimeService" />
+		</property>
+	</bean>
+	
+	<bean id="pessimisticLockService" class="org.kuali.rice.kns.service.impl.PessimisticLockServiceImpl">
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+	</bean>
+
+	<bean id="ojbCollectionHelper" class="org.kuali.rice.kns.util.OjbCollectionHelper" />
+
+	<bean id="kualiLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" scope="prototype">
+		<property name="lookupableHelperService">
+			<ref bean="lookupableHelperService" />
+		</property>
+
+	</bean>
+
+	<bean id="lookupableHelperService" class="org.kuali.rice.kns.lookup.KualiLookupableHelperServiceImpl" scope="prototype">
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="businessObjectDictionaryService">
+			<ref bean="businessObjectDictionaryService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="encryptionService">
+			<ref bean="encryptionService" />
+		</property>
+		<property name="lookupService">
+			<ref bean="lookupService" />
+		</property>
+		<property name="businessObjectMetaDataService">
+			<ref bean="businessObjectMetaDataService" />
+		</property>
+		<property name="sequenceAccessorService">
+			<ref bean="sequenceAccessorService" />
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="lookupResultsService">
+			<ref bean="lookupResultsService" />
+		</property>
+	</bean>
+
+	<bean id="lookupResultsService" class="org.kuali.rice.kns.lookup.LookupResultsServiceImpl">
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="persistedLookupMetadataDao">
+			<ref bean="persistedLookupMetadataDao" />
+		</property>
+	</bean>
+	
+	<bean id="postalCodeService" class="org.kuali.rice.kns.service.impl.PostalCodeServiceImpl">
+		<property name="kualiModuleService">
+			<ref bean="kualiModuleService" />
+		</property>
+		<property name="countryService">
+			<ref bean="countryService" />
+		</property>
+	</bean>
+	
+	<bean id="countyService" class="org.kuali.rice.kns.service.impl.CountyServiceImpl">
+		<property name="kualiModuleService">
+			<ref bean="kualiModuleService" />
+		</property>
+		<property name="countryService">
+			<ref bean="countryService" />
+		</property>
+	</bean>
+	
+	<bean id="stateService" class="org.kuali.rice.kns.service.impl.StateServiceImpl">
+		<property name="kualiModuleService">
+			<ref bean="kualiModuleService" />
+		</property>
+		<property name="countryService">
+			<ref bean="countryService" />
+		</property>
+	</bean>
+	
+	<bean id="countryService" class="org.kuali.rice.kns.service.impl.CountryServiceImpl">
+		<property name="kualiModuleService">
+			<ref bean="kualiModuleService" />
+		</property>
+	</bean>
+	
+	
+  <bean id="persistedLookupMetadataDao" class="org.kuali.rice.kns.dao.proxy.PersistedLookupMetadataDaoProxy">
+    <property name="persistedLookupMetadataDaoJpa" ref="persistedLookupMetadataDaoJpa" />
+    <property name="persistedLookupMetadataDaoOjb" ref="persistedLookupMetadataDaoOjb" />
+  </bean>
+  
+	<bean id="persistedLookupMetadataDaoJpa" class="org.kuali.rice.kns.dao.impl.PersistedLookupMetadataDaoJpa" />
+  
+	<bean id="persistedLookupMetadataDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.PersistedLookupMetadataDaoOjb" />
+	<bean id="businessObjectMetaDataService" class="org.kuali.rice.kns.service.impl.BusinessObjectMetaDataServiceImpl">
+		<property name="businessObjectDictionaryService">
+			<ref bean="businessObjectDictionaryService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="kualiModuleService">
+			<ref bean="kualiModuleService" />
+		</property>
+	</bean>
+
+    <bean id="parameterLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" parent="kualiLookupable">
+        <property name="lookupableHelperService">
+            <bean class="org.kuali.rice.kns.lookup.ParameterLookupableHelperServiceImpl"
+                parent="lookupableHelperService">
+            </bean>
+        </property>
+    </bean>
+
+    <!-- placeholder so applications can override without making DD changes-->
+    <bean id="parameterDetailTypeLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" parent="kualiLookupable">
+        <property name="lookupableHelperService">
+            <bean class="org.kuali.rice.kns.lookup.ParameterDetailTypeLookupableHelperServiceImpl"
+                parent="lookupableHelperService">
+            </bean>
+        </property>
+    </bean>
+
+	<bean id="workflowLookupable" class="org.kuali.rice.kns.workflow.attribute.WorkflowLookupableImpl" scope="prototype">
+		<property name="configurationService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+		<property name="businessObjectDictionaryService">
+			<ref bean="businessObjectDictionaryService" />
+		</property>
+	</bean>
+
+	<bean id="pessimisticLockLookupable" class="org.kuali.rice.kns.lookup.KualiLookupableImpl" scope="prototype">
+		<property name="lookupableHelperService">
+			<ref bean="pessimisticLockLookupableHelperService" />
+		</property>
+	</bean>
+    
+	<bean id="pessimisticLockLookupableHelperService" class="org.kuali.rice.kns.lookup.PessimisticLockLookupableHelperServiceImpl" scope="prototype">
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="businessObjectDictionaryService">
+			<ref bean="businessObjectDictionaryService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="encryptionService">
+			<ref bean="encryptionService" />
+		</property>
+		<property name="lookupService">
+			<ref bean="lookupService" />
+		</property>
+		<property name="businessObjectMetaDataService">
+			<ref bean="businessObjectMetaDataService" />
+		</property>
+		<property name="sequenceAccessorService">
+			<ref bean="sequenceAccessorService" />
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="lookupResultsService">
+			<ref bean="lookupResultsService" />
+		</property>
+	</bean>
+
+		<bean id="sessionDocumentService" class="org.kuali.rice.kns.service.impl.SessionDocumentServiceImpl">
+		<property name="maxCacheSize" value="${session.document.cache.size}" />
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="sessionDocumentDao">
+			<ref bean="sessionDocumentDao" />
+		</property>
+	</bean>
+	<!-- Since these beans are not a singletons, Spring does not inject their static
+		members until the first one is created. This bean causes one to be created.
+	-->
+	<bean id="springStatefulStaticInitializer" class="java.util.ArrayList">
+		<constructor-arg>
+			<list>
+				<ref bean="kualiLookupable" />
+				<ref bean="workflowLookupable" />
+			</list>
+		</constructor-arg>
+	</bean>
+
+	<bean id="lookupUtils" class="org.kuali.rice.kns.lookup.LookupUtils">
+		<property name="businessObjectDictionaryService">
+			<ref bean="businessObjectDictionaryService" />
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="businessObjectMetaDataService">
+			<ref bean="businessObjectMetaDataService" />
+		</property>
+        <property name="kualiConfigurationService" ref="kualiConfigurationService" />
+	</bean>
+
+	<bean id="kualiInquirable" class="org.kuali.rice.kns.inquiry.KualiInquirableImpl" scope="prototype">
+		<property name="kualiConfigurationService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+	</bean>
+
+	<bean id="confirmationQuestion" class="org.kuali.rice.kns.question.ConfirmationQuestion" scope="prototype"/>
+
+	<bean id="maintenanceDocumentRuleBase" class="org.kuali.rice.kns.maintenance.rules.MaintenanceDocumentRuleBase" abstract="true">
+		<property name="configService">
+			<ref bean="kualiConfigurationService" />
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="dictionaryValidationService">
+			<ref bean="dictionaryValidationService" />
+		</property>
+		<property name="documentAuthorizationService">
+			<ref bean="documentAuthorizationService" />
+		</property>
+		<property name="workflowDocumentService">
+			<ref bean="workflowDocumentService" />
+		</property>
+		<property name="boDictionaryService">
+			<ref bean="businessObjectDictionaryService" />
+		</property>
+		<property name="ddService">
+			<ref bean="dataDictionaryService" />
+		</property>
+		<property name="boService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="maintDocDictionaryService">
+			<ref bean="maintenanceDocumentDictionaryService" />
+		</property>
+		<property name="persistenceService">
+			<ref bean="persistenceService" />
+		</property>
+	</bean>
+
+	<bean id="documentDao" class="org.kuali.rice.kns.dao.proxy.DocumentDaoProxy">
+		<property name="businessObjectDao" ref="businessObjectDao" />
+    <property name="documentDaoJpa" ref="documentDaoJpa" />
+    <property name="documentDaoOjb" ref="documentDaoOjb" />
+	</bean>
+
+  <bean id="documentDaoJpa" class="org.kuali.rice.kns.dao.impl.DocumentDaoJpa">
+    <property name="businessObjectDao" ref="businessObjectDao" />
+  </bean>
+
+  <bean id="documentDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.DocumentDaoOjb">
+    <property name="businessObjectDao" ref="businessObjectDao" />
+  </bean>
+
+  <bean id="documentHeaderDao" class="org.kuali.rice.kns.dao.proxy.DocumentHeaderDaoProxy">
+    <property name="documentHeaderDaoJpa" ref="documentHeaderDaoJpa" />
+    <property name="documentHeaderDaoOjb" ref="documentHeaderDaoOjb" />
+  </bean>
+  
+  <bean id="documentHeaderDaoJpa" class="org.kuali.rice.kns.dao.impl.DocumentHeaderDaoJpa" />
+	
+	<bean id="documentHeaderDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.DocumentHeaderDaoOjb" />
+
+  <bean id="lookupDao" class="org.kuali.rice.kns.dao.proxy.LookupDaoProxy">
+    <property name="lookupDaoJpa" ref="lookupDaoJpa" />
+    <property name="lookupDaoOjb" ref="lookupDaoOjb" />
+  </bean>
+  
+  <bean id="lookupDaoJpa" class="org.kuali.rice.kns.dao.impl.LookupDaoJpa">
+    <property name="persistenceStructureService" ref="persistenceStructureService" />
+    <property name="dateTimeService" ref="dateTimeService" />
+  </bean>
+   
+  <bean id="lookupDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.LookupDaoOjb">
+    <property name="persistenceStructureService" ref="persistenceStructureService" />
+		<property name="dateTimeService" ref="dateTimeService" />
+	</bean>
+
+  <bean id="maintenanceDocumentDao" class="org.kuali.rice.kns.dao.proxy.MaintenanceDocumentDaoProxy">
+    <property name="maintenanceDocumentDaoJpa" ref="maintenanceDocumentDaoJpa" />
+    <property name="maintenanceDocumentDaoOjb" ref="maintenanceDocumentDaoOjb" />
+  </bean>
+
+	<bean id="maintenanceDocumentDaoJpa" class="org.kuali.rice.kns.dao.impl.MaintenanceDocumentDaoJpa" />
+
+  <bean id="maintenanceDocumentDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.MaintenanceDocumentDaoOjb" />
+
+  <bean id="noteDao" class="org.kuali.rice.kns.dao.proxy.NoteDaoProxy">
+    <property name="noteDaoJpa" ref="noteDaoJpa" />
+    <property name="noteDaoOjb" ref="noteDaoOjb" />
+  </bean>
+
+	<bean id="noteDaoJpa" class="org.kuali.rice.kns.dao.impl.NoteDaoJpa" />
+
+  <bean id="noteDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.NoteDaoOjb" />
+
+  <bean id="businessObjectDao" class="org.kuali.rice.kns.dao.proxy.BusinessObjectDaoProxy">
+    <property name="businessObjectDaoJpa" ref="businessObjectDaoJpa" />
+    <property name="businessObjectDaoOjb" ref="businessObjectDaoOjb" />
+  </bean>
+
+  <bean id="businessObjectDaoJpa" class="org.kuali.rice.kns.dao.impl.BusinessObjectDaoJpa">
+    <property name="persistenceStructureService" ref="persistenceStructureService" />
+  </bean>
+
+	<bean id="businessObjectDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.BusinessObjectDaoOjb">
+		<property name="persistenceStructureService" ref="persistenceStructureService" />
+	</bean>
+	
+	<bean id="sessionDocumentDao" class="org.kuali.rice.kns.dao.proxy.SessionDocumentDaoProxy">
+    	<property name="sessionDocumentDaoJpa" ref="sessionDocumentDaoJpa" />
+    	<property name="sessionDocumentDaoOjb" ref="sessionDocumentDaoOjb" />
+  	</bean>
+  
+    <bean id="sessionDocumentDaoJpa" class="org.kuali.rice.kns.dao.impl.SessionDocumentDaoJpa" />
+	
+	<bean id="sessionDocumentDaoOjb" parent="platformAwareDao" class="org.kuali.rice.kns.dao.impl.SessionDocumentDaoOjb" />
+	
+	<bean id="inactivationBlockingDetectionService" class="org.kuali.rice.kns.service.impl.InactivationBlockingDetectionServiceImpl">
+		<property name="businessObjectMetaDataService">
+			<ref bean="businessObjectMetaDataService"/>
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+	</bean>
+	
+	<bean id="inactivationBlockingDisplayService" class="org.kuali.rice.kns.service.impl.InactivationBlockingDisplayServiceImpl">
+		<property name="persistenceService">
+			<ref bean="persistenceService"/>
+		</property>
+		<property name="dataDictionaryService">
+			<ref bean="dataDictionaryService"/>
+		</property>
+		<property name="persistenceStructureService">
+			<ref bean="persistenceStructureService" />
+		</property>
+	</bean>
+	<bean id="kimPermissionTypeService" class="org.kuali.rice.kns.service.impl.DocumentTypePermissionTypeServiceImpl" />
+
+	<bean id="documentStatusComponentAttributePermissionTypeService" class="org.kuali.rice.kns.service.impl.DocumentStatusComponentAttributePermissionTypeServiceImpl" >
+    	<property name="kimAttributesTranslators">
+    		<list>
+				<bean class="org.kuali.rice.kns.service.impl.DocumentStatusComponentAttributePermissionTypeTranslator">
+					<property name="supportedAttributeNames">
+						<list>
+							<value>Document Number</value>
+							<value>Property Name</value>
+							<value>Component</value>
+						</list>
+					</property>
+					<property name="resultAttributeNames">
+						<list>
+							<value>Document Type Name</value>
+							<value>Route Status Code</value>
+							<value>Route Node Name</value>
+						</list>
+					</property>
+			    </bean>
+    		</list>
+    	</property>
+	</bean>
+			
+  <!-- START JPA CONFIGURATION -->
+
+  <!-- Used for @PersistenceContext auto-injection -->
+  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
+
+  <bean id="entityManagerFactory" class="org.kuali.rice.core.jpa.spring.RiceEntityManagerProxyFactoryBean">    
+    <constructor-arg value="rice.kns"/>
+    <constructor-arg ref="knsDataSource"/>
+  </bean>
+
+  <!-- Used for @Transactional so you don't have to wire services up in here-->
+  <tx:annotation-driven transaction-manager="transactionManager"/>
+  
+  <bean id="NoResultExceptionInterceptor" class="org.kuali.rice.core.jpa.spring.NoResultExceptionInterceptor" />
+
+  <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
+    <property name="interceptorNames">
+      <list>
+        <idref local="NoResultExceptionInterceptor" />
+      </list>
+    </property>
+    <property name="beanNames">
+      <list>
+        <idref local="businessObjectDaoJpa"/>        
+        <idref local="documentDaoJpa"/>
+        <idref local="documentHeaderDao"/>        
+        <idref local="lookupDaoJpa"/>
+        <idref local="persistenceDaoJpa"/>
+        <idref local="maintenanceDocumentDao"/>
+        <idref local="noteDao"/>
+        <idref local="persistedLookupMetadataDao"/>
+        <idref local="sessionDocumentDao"/>        
+        <idref local="postProcessorService"/>
+      </list>
+    </property>
+  </bean>
+  
+  <!-- END JPA CONFIGURATION -->
+
+	
+	<bean id="documentSerializerService" class="org.kuali.rice.kns.service.impl.DocumentSerializerServiceImpl">
+		<property name="persistenceService">
+			<ref bean="persistenceService" />
+		</property>
+		<property name="xmlObjectSerializerService">
+			<ref bean="xmlObjectSerializerService"/>
+		</property>
+	</bean>
+
+	<bean id="businessObjectSerializerService" class="org.kuali.rice.kns.service.impl.BusinessObjectSerializerServiceImpl">
+		<property name="persistenceService">
+			<ref bean="persistenceService" />
+		</property>
+		<property name="xmlObjectSerializerService">
+			<ref bean="xmlObjectSerializerService"/>
+		</property>
+	</bean>	
+	
+	<bean id="knsModule" class="org.kuali.rice.kns.service.impl.ModuleServiceBase" >
+    	<property name="moduleConfiguration" ref="knsModuleConfiguration"/>
+    	<property name="kualiModuleService" ref="kualiModuleService" />
+    </bean>
+</beans>
Index: impl/src/main/config/ddl/tables/KR_COUNTRY_T.table.ddl
===================================================================
--- impl/src/main/config/ddl/tables/KR_COUNTRY_T.table.ddl	(revision 0)
+++ impl/src/main/config/ddl/tables/KR_COUNTRY_T.table.ddl	(revision 0)
@@ -0,0 +1,32 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+CREATE TABLE KR_COUNTRY_T 
+    (POSTAL_CNTRY_CD VARCHAR2(2) NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    POSTAL_CNTRY_NM VARCHAR2(40), 
+    PSTL_CNTRY_RSTRC_IND VARCHAR2(1) NOT NULL, 
+    ACTV_IND VARCHAR2(1) DEFAULT 'Y' NOT NULL) 
+/ 
+ALTER TABLE KR_COUNTRY_T 
+ADD CONSTRAINT KR_COUNTRY_TP1 
+PRIMARY KEY (POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_COUNTRY_T 
+ADD CONSTRAINT KR_COUNTRY_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+
Index: impl/src/main/java/org/kuali/rice/kns/bo/County.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/County.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/County.java	(revision 0)
@@ -0,0 +1,70 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo;
+
+import org.kuali.rice.kns.bo.ExternalizableBusinessObject;
+
+public interface County extends ExternalizableBusinessObject{
+
+    public abstract State getState();
+
+    public abstract void setState(State state);
+
+    public abstract boolean isActive();
+
+    public abstract void setActive(boolean active);
+
+    public abstract String getCountyName();
+
+    public abstract void setCountyName(String countName);
+
+    public abstract String getCountyCode();
+
+    public abstract void setCountyCode(String countyCode);
+
+    public abstract String getStateCode();
+
+    public abstract void setStateCode(String stateCode);
+
+    /**
+     * Gets the postalCountryCode attribute.
+     * 
+     * @return Returns the postalCountryCode.
+     */
+    public abstract String getPostalCountryCode();
+
+    /**
+     * Sets the postalCountryCode attribute value.
+     * 
+     * @param postalCountryCode The postalCountryCode to set.
+     */
+    public abstract void setPostalCountryCode(String postalCountryCode);
+
+    /**
+     * Gets the country attribute.
+     * 
+     * @return Returns the country.
+     */
+    public abstract Country getCountry();
+
+    /**
+     * Sets the country attribute value.
+     * 
+     * @param country The country to set.
+     */
+    public abstract void setCountry(Country country);
+
+}
\ No newline at end of file
Index: impl/src/main/java/org/kuali/rice/kns/service/impl/PostalCodeServiceImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/impl/PostalCodeServiceImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/impl/PostalCodeServiceImpl.java	(revision 0)
@@ -0,0 +1,104 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service.impl;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.log4j.Logger;
+import org.kuali.rice.kns.util.KNSPropertyConstants;
+import org.kuali.rice.kns.bo.PostalCode;
+import org.kuali.rice.kns.service.CountryService;
+import org.kuali.rice.kns.service.PostalCodeService;
+import org.kuali.rice.kns.bo.BusinessObject;
+import org.kuali.rice.kns.service.KualiModuleService;
+
+public class PostalCodeServiceImpl implements PostalCodeService {
+    private static Logger LOG = Logger.getLogger(PostalCodeServiceImpl.class);
+
+    private CountryService countryService;
+    private KualiModuleService kualiModuleService;
+
+    /**
+     * @see org.kuali.kfs.sys.service.PostalCodeService#getByPrimaryId(java.lang.String)
+     */
+    public PostalCode getByPrimaryId(String postalZipCode) {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+
+        return this.getByPrimaryId(postalCountryCode, postalZipCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.PostalCodeService#getByPrimaryId(java.lang.String, java.lang.String)
+     */
+    public PostalCode getByPrimaryId(String postalCountryCode, String postalCode) {
+        if (StringUtils.isBlank(postalCountryCode) || StringUtils.isBlank(postalCode)) {
+            LOG.info("neither postalCountryCode nor postalCode can be empty String.");
+            return null;
+        }
+
+        Map<String, Object> postalCodeMap = new HashMap<String, Object>();
+        postalCodeMap.put(KNSPropertyConstants.POSTAL_COUNTRY_CODE, postalCountryCode);
+        postalCodeMap.put(KNSPropertyConstants.POSTAL_CODE, postalCode);
+
+        return kualiModuleService.getResponsibleModuleService(PostalCode.class).getExternalizableBusinessObject(PostalCode.class, postalCodeMap);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.PostalCodeService#getByPrimaryIdIfNecessary(org.kuali.rice.kns.bo.BusinessObject,
+     *      java.lang.String, org.kuali.kfs.sys.businessobject.PostalCode)
+     */
+    public PostalCode getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCode, PostalCode existingPostalCode) {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+
+        return this.getByPrimaryIdIfNecessary(businessObject, postalCountryCode, postalCode, existingPostalCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.PostalCodeService#getByPrimaryIdIfNecessary(org.kuali.rice.kns.bo.BusinessObject,
+     *      java.lang.String, java.lang.String, org.kuali.kfs.sys.businessobject.PostalCode)
+     */
+    public PostalCode getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, String postalCode, PostalCode existingPostalCode) {
+        if (existingPostalCode != null) {
+            String existingCountryCode = existingPostalCode.getPostalCountryCode();
+            String existingPostalZipCode = existingPostalCode.getPostalCode();
+            if (StringUtils.equals(postalCountryCode, existingCountryCode) && StringUtils.equals(postalCode, existingPostalZipCode)) {
+                return existingPostalCode;
+            }
+        }
+
+        return this.getByPrimaryId(postalCountryCode, postalCode);
+    }
+
+    /**
+     * Sets the countryService attribute value.
+     * 
+     * @param countryService The countryService to set.
+     */
+    public void setCountryService(CountryService countryService) {
+        this.countryService = countryService;
+    }
+
+    /**
+     * Sets the kualiModuleService attribute value.
+     * 
+     * @param kualiModuleService The kualiModuleService to set.
+     */
+    public void setKualiModuleService(KualiModuleService kualiModuleService) {
+        this.kualiModuleService = kualiModuleService;
+    }
+}
Index: impl/src/main/java/org/kuali/rice/kns/service/PostalCodeService.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/PostalCodeService.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/PostalCodeService.java	(revision 0)
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service;
+
+import org.kuali.rice.kns.bo.PostalCode;
+import org.kuali.rice.kns.bo.BusinessObject;
+
+public interface PostalCodeService {
+
+    /**
+     * get the postal code object based on the given postal code and default country code. The default country code is set up in
+     * the system.
+     * 
+     * @param postalCode the given postal code
+     * @return the postal code object with the given postal code and default country code.
+     */
+    public PostalCode getByPrimaryId(String postalCode);
+
+    /**
+     * get the postal zip code object based on the given postal code and country code
+     * 
+     * @param postalCountryCode the given country code
+     * @param postalCode the given postal code
+     * @return the postal code object with the given postal code and country code.
+     */
+    public PostalCode getByPrimaryId(String postalCountryCode, String postalCode);
+
+    /**
+     * get the postal code obpostalt based on the given postal code and default country code. The default country code is set up in
+     * the system. If the given postal postale is same as that of the given existing postal code, return the existing postal code;
+     * otherwise, retrieve a postal code object.
+     * 
+     * @param businessObject the business object that references to a country object 
+     * @param postalCode the given postal code
+     * @param existingPostalCode the given existing postal code
+     * @return the postal code object with the given postal code and default country code if necessary
+     */
+    public PostalCode getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCode, PostalCode existingPostalCode);
+
+    /**
+     * get the postal code object based on the given postal code and country code. If the given postal code and country code
+     * are same as those of the given existing postal code, return the existing postal code; otherwise, retrieve a postal code
+     * object.
+     * 
+     * @param businessObject the business object that references to a country object
+     * @param postalCountryCode the given country code
+     * @param postalCode the given postal code
+     * @param existingPostalCode the given existing postal code
+     * @return the postal code object with the given postal code and country code if necessary
+     */
+    public PostalCode getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, String postalCode, PostalCode existingPostalCode);
+}
Index: impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/PostalCodeMaintenanceDocument.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/PostalCodeMaintenanceDocument.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/PostalCodeMaintenanceDocument.xml	(revision 0)
@@ -0,0 +1,101 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="PostalCodeMaintenanceDocument" parent="PostalCodeMaintenanceDocument-parentBean" />
+
+  <bean id="PostalCodeMaintenanceDocument-parentBean" abstract="true" parent="MaintenanceDocumentEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.PostalCodeImpl" />
+    <property name="maintainableClass" value="org.kuali.rice.kns.maintenance.KualiMaintainableImpl" />
+    <property name="maintainableSections" >
+      <list>
+        <ref bean="PostalCodeMaintenanceDocument-EditPostalCodes" />
+      </list>
+    </property>
+    <property name="defaultExistenceChecks" >
+      <list>
+      	<bean parent="ReferenceDefinition"
+              p:attributeName="country"
+              p:attributeToHighlightOnFail="postalCountryCode" />
+        <bean parent="ReferenceDefinition"
+              p:attributeName="state"
+              p:attributeToHighlightOnFail="postalStateCode" />
+      </list>
+    </property>
+    <property name="lockingKeys" >
+      <list>
+      	<value>postalCountryCode</value>
+        <value>postalCode</value>
+      </list>
+    </property>
+    <property name="label" value="Postal Code" />
+    <property name="shortLabel" value="Postal Code" />
+    <property name="summary" value="Postal Code maintenance document" />
+    <property name="description" value="Document used to create or update Postal Code objects" />
+    <property name="helpDefinition" >
+       <bean parent="HelpDefinition"
+            p:parameterNamespace="KR-NS"
+            p:parameterName="POSTAL_CODE"
+            p:parameterDetailType="PostalCode" />
+    </property>
+    <property name="documentTypeName" value="PostalCodeMaintenanceDocument" />
+    <property name="documentAuthorizerClass" value="org.kuali.rice.kns.document.authorization.MaintenanceDocumentAuthorizerBase" />
+    <property name="documentTypeCode" value="ZIPC" />
+    <property name="workflowProperties" >
+      <ref bean="PostalCodeMaintenanceDocument-workflowProperties" />
+    </property>
+    <property name="authorizations" >
+      <list>
+        <bean parent="AuthorizationDefinition">
+          <property name="action" value="initiate" />
+          <property name="authorizedGroups" >
+            <set>
+              <value>SY_MAINTENANCE_USERS</value>
+            </set>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Maintenance Section Definitions -->
+
+
+  <bean id="PostalCodeMaintenanceDocument-EditPostalCodes" parent="PostalCodeMaintenanceDocument-EditPostalCodes-parentBean" />
+
+  <bean id="PostalCodeMaintenanceDocument-EditPostalCodes-parentBean" abstract="true" parent="MaintainableSectionDefinition">
+    <property name="id" value="Edit Postal Codes" />
+    <property name="title" value="Edit Postal Codes" />
+    <property name="maintainableItems" >
+      <list>
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCountryCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalStateCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="countyCode" />              
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCityName"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:defaultValue="true"
+              p:name="active" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Exported Workflow Properties -->
+
+
+  <bean id="PostalCodeMaintenanceDocument-workflowProperties" parent="PostalCodeMaintenanceDocument-workflowProperties-parentBean" />
+
+  <bean id="PostalCodeMaintenanceDocument-workflowProperties-parentBean" abstract="true" parent="WorkflowProperties">
+  </bean>
+</beans>
Index: impl/src/main/java/org/kuali/rice/kns/bo/CountyImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/CountyImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/CountyImpl.java	(revision 0)
@@ -0,0 +1,101 @@
+package org.kuali.rice.kns.bo;
+
+import java.util.LinkedHashMap;
+
+import org.kuali.rice.kns.bo.Inactivateable;
+import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
+
+public class CountyImpl extends PersistableBusinessObjectBase implements Inactivateable, County {
+
+    private String postalCountryCode;
+    private String countyCode;
+    private String stateCode;
+    private String countyName;
+    private boolean active;
+
+    private State state;
+    private Country country;
+
+    public State getState() {
+        return state;
+    }
+
+    public void setState(State state) {
+        this.state = state;
+    }
+
+    public boolean isActive() {
+        return active;
+    }
+
+    public void setActive(boolean active) {
+        this.active = active;
+    }
+
+    public String getCountyName() {
+        return countyName;
+    }
+
+    public void setCountyName(String countName) {
+        this.countyName = countName;
+    }
+
+    public String getCountyCode() {
+        return countyCode;
+    }
+
+    public void setCountyCode(String countyCode) {
+        this.countyCode = countyCode;
+    }
+
+    public String getStateCode() {
+        return stateCode;
+    }
+
+    public void setStateCode(String stateCode) {
+        this.stateCode = stateCode;
+    }
+
+    protected LinkedHashMap toStringMapper() {
+        LinkedHashMap m = new LinkedHashMap();
+        m.put("countyCode", this.countyCode);
+        m.put("stateCode", this.stateCode);
+        return m;
+    }
+
+    /**
+     * Gets the postalCountryCode attribute.
+     * 
+     * @return Returns the postalCountryCode.
+     */
+    public String getPostalCountryCode() {
+        return postalCountryCode;
+    }
+
+    /**
+     * Sets the postalCountryCode attribute value.
+     * 
+     * @param postalCountryCode The postalCountryCode to set.
+     */
+    public void setPostalCountryCode(String postalCountryCode) {
+        this.postalCountryCode = postalCountryCode;
+    }
+
+    /**
+     * Gets the country attribute.
+     * 
+     * @return Returns the country.
+     */
+    public Country getCountry() {
+        return country;
+    }
+
+    /**
+     * Sets the country attribute value.
+     * 
+     * @param country The country to set.
+     */
+    public void setCountry(Country country) {
+        this.country = country;
+    }
+}
Index: impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/CountryMaintenanceDocument.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/CountryMaintenanceDocument.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/CountryMaintenanceDocument.xml	(revision 0)
@@ -0,0 +1,86 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="CountryMaintenanceDocument" parent="CountryMaintenanceDocument-parentBean" />
+
+  <bean id="CountryMaintenanceDocument-parentBean" abstract="true" parent="MaintenanceDocumentEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.CountryImpl" />
+    <property name="maintainableClass" value="org.kuali.rice.kns.maintenance.KualiMaintainableImpl" />
+    <property name="maintainableSections" >
+      <list>
+        <ref bean="CountryMaintenanceDocument-EditCountry" />
+      </list>
+    </property>
+    <property name="lockingKeys" >
+      <list>
+        <value>postalCountryCode</value>
+      </list>
+    </property>
+    <property name="label" value="Country" />
+    <property name="shortLabel" value="Country" />
+    <property name="summary" value="Country maintenance document" />
+    <property name="description" value="Document used to create or update Country objects" />
+    <property name="helpDefinition" >
+      <bean parent="HelpDefinition"
+            p:parameterNamespace="KR-NS"
+            p:parameterName="COUNTRY"
+            p:parameterDetailType="Country" />
+    </property>
+    <property name="documentTypeName" value="CountryMaintenanceDocument" />
+    <property name="documentAuthorizerClass" value="org.kuali.rice.kns.document.authorization.MaintenanceDocumentAuthorizerBase" />
+    <property name="documentTypeCode" value="CTRY" />
+    <property name="workflowProperties" >
+      <ref bean="CountryMaintenanceDocument-workflowProperties" />
+    </property>
+    <property name="authorizations" >
+      <list>
+        <bean parent="AuthorizationDefinition">
+          <property name="action" value="initiate" />
+          <property name="authorizedGroups" >
+            <set>
+              <value>SY_MAINTENANCE_USERS</value>
+            </set>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Maintenance Section Definitions -->
+
+
+  <bean id="CountryMaintenanceDocument-EditCountry" parent="CountryMaintenanceDocument-EditCountry-parentBean" />
+
+  <bean id="CountryMaintenanceDocument-EditCountry-parentBean" abstract="true" parent="MaintainableSectionDefinition">
+    <property name="id" value="Edit Country" />
+    <property name="title" value="Edit Country" />
+    <property name="maintainableItems" >
+      <list>
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCountryCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCountryName"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCountryRestrictedIndicator"
+              p:defaultValue="false"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:defaultValue="true" 
+              p:name="active" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Exported Workflow Properties -->
+
+
+  <bean id="CountryMaintenanceDocument-workflowProperties" parent="CountryMaintenanceDocument-workflowProperties-parentBean" />
+
+  <bean id="CountryMaintenanceDocument-workflowProperties-parentBean" abstract="true" parent="WorkflowProperties">
+  </bean>
+</beans>
Index: impl/src/main/config/ddl/tables/KR_POSTAL_CODE_T.table.ddl
===================================================================
--- impl/src/main/config/ddl/tables/KR_POSTAL_CODE_T.table.ddl	(revision 0)
+++ impl/src/main/config/ddl/tables/KR_POSTAL_CODE_T.table.ddl	(revision 0)
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+CREATE TABLE KR_POSTAL_CODE_T 
+    (POSTAL_ZIP_CD VARCHAR2(20) NOT NULL, 
+    POSTAL_CNTRY_CD VARCHAR2(2) DEFAULT 'US' NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    POSTAL_STATE_CD VARCHAR2(2), 
+    COUNTY_CD VARCHAR2(10), 
+    POSTAL_CITY_NM VARCHAR2(30), 
+    BLDG_CD VARCHAR2(4), 
+    BLDG_ROOM_NBR VARCHAR2(8), 
+    ACTV_IND VARCHAR2(1) DEFAULT 'Y' NOT NULL) 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TP1 
+PRIMARY KEY (POSTAL_ZIP_CD, POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TR1 
+FOREIGN KEY (POSTAL_CNTRY_CD) 
+REFERENCES KR_COUNTRY_T 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TR2 
+FOREIGN KEY (POSTAL_STATE_CD, POSTAL_CNTRY_CD) 
+REFERENCES KR_STATE_T 
+/ 
+ALTER TABLE KR_POSTAL_CODE_T 
+ADD CONSTRAINT KR_POSTAL_CODE_TR3 
+FOREIGN KEY (COUNTY_CD, POSTAL_STATE_CD, POSTAL_CNTRY_CD) 
+REFERENCES KR_COUNTY_T 
+/ 
+
Index: impl/src/main/resources/org/kuali/rice/kns/config/OJB-repository-kns.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/config/OJB-repository-kns.xml	(revision 5105)
+++ impl/src/main/resources/org/kuali/rice/kns/config/OJB-repository-kns.xml	(working copy)
@@ -298,5 +298,68 @@
 	    <field-descriptor name="lastUpdatedDate" column="LST_UPDATE_DT" jdbc-type="TIMESTAMP" index="true" />
   </class-descriptor>
   
+  <class-descriptor class="org.kuali.rice.kns.bo.CountryImpl" table="KR_COUNTRY_T">
+	    <field-descriptor name="postalCountryCode" column="POSTAL_CNTRY_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+    	<field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    	<field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+    	<field-descriptor name="postalCountryName" column="POSTAL_CNTRY_NM" jdbc-type="VARCHAR" />
+    	<field-descriptor name="postalCountryRestrictedIndicator" column="PSTL_CNTRY_RSTRC_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+		<field-descriptor name="active" column="ACTV_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+  </class-descriptor>
+
+  <class-descriptor class="org.kuali.rice.kns.bo.StateImpl" table="KR_STATE_T">
+		<field-descriptor name="postalCountryCode" column="POSTAL_CNTRY_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+    	<field-descriptor name="postalStateCode" column="POSTAL_STATE_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+    	<field-descriptor name="postalStateName" column="POSTAL_STATE_NM" jdbc-type="VARCHAR" />
+    	<field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    	<field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+		<field-descriptor name="active" column="ACTV_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+	
+		<reference-descriptor name="country" class-ref="org.kuali.rice.kns.bo.CountryImpl" auto-retrieve="true" auto-update="none" auto-delete="none">
+        	<foreignkey field-ref="postalCountryCode" />
+    	</reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="org.kuali.rice.kns.bo.PostalCodeImpl" table="KR_POSTAL_CODE_T">
+	<field-descriptor name="postalCountryCode" column="POSTAL_CNTRY_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+    <field-descriptor name="postalCode" column="POSTAL_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+    <field-descriptor name="postalStateCode" column="POSTAL_STATE_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="postalCityName" column="POSTAL_CITY_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+	<field-descriptor name="active" column="ACTV_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+	<field-descriptor name="countyCode" column="COUNTY_CD" jdbc-type="VARCHAR" />
+	
+	<reference-descriptor name="country" class-ref="org.kuali.rice.kns.bo.CountryImpl" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="postalCountryCode" />
+    </reference-descriptor>
+    
+    <reference-descriptor name="state" class-ref="org.kuali.rice.kns.bo.StateImpl" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="postalCountryCode" />
+        <foreignkey field-ref="postalStateCode" />
+    </reference-descriptor>
+  </class-descriptor>
+
+
+<class-descriptor class="org.kuali.rice.kns.bo.CountyImpl" table="KR_COUNTY_T" >
+	<field-descriptor name="postalCountryCode" column="POSTAL_CNTRY_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+	<field-descriptor name="countyCode" column="COUNTY_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+	<field-descriptor name="stateCode" column="STATE_CD"  jdbc-type="VARCHAR" primarykey="true" index="true" />
+	<field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+	<field-descriptor name="countyName" column="COUNTY_NM" jdbc-type="VARCHAR" />
+	<field-descriptor name="active" column="ACTV_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+	
+	<reference-descriptor name="country" class-ref="org.kuali.rice.kns.bo.CountryImpl" auto-retrieve="true" auto-update="none" auto-delete="none">
+        <foreignkey field-ref="postalCountryCode" />
+    </reference-descriptor>
+	
+	<reference-descriptor name="state" class-ref="org.kuali.rice.kns.bo.StateImpl" auto-retrieve="true" auto-update="none" auto-delete="none">
+        <foreignkey field-ref="postalCountryCode" />
+        <foreignkey field-ref="stateCode" />
+    </reference-descriptor>
+</class-descriptor>
+
   
-</descriptor-repository>
+  
+</descriptor-repository>
\ No newline at end of file
Index: impl/src/main/java/org/kuali/rice/kns/bo/options/StateValuesFinder.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/options/StateValuesFinder.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/options/StateValuesFinder.java	(revision 0)
@@ -0,0 +1,52 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo.options;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.List;
+
+import org.kuali.rice.kns.bo.State;
+import org.kuali.rice.kns.service.KNSServiceLocator;
+import org.kuali.rice.kns.service.StateService;
+import org.kuali.rice.kns.lookup.keyvalues.KeyValuesBase;
+import org.kuali.rice.kns.service.KeyValuesService;
+import org.kuali.rice.kns.web.ui.KeyLabelPair;
+
+/**
+ * This class...
+ */
+public class StateValuesFinder extends KeyValuesBase {
+
+    /*
+     * @see org.kuali.keyvalues.KeyValuesFinder#getKeyValues()
+     */
+    public List getKeyValues() {
+
+        List<State> codes = KNSServiceLocator.getStateService().findAllStates();
+        List<KeyLabelPair> labels = new ArrayList<KeyLabelPair>();
+        labels.add(new KeyLabelPair("", ""));
+        for (State state : codes) {
+            if(state.isActive()) {
+                labels.add(new KeyLabelPair(state.getPostalStateCode(), state.getPostalStateName()));
+            }
+        }
+
+        return labels;
+    }
+
+}
Index: impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/CountyMaintenanceDocument.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/CountyMaintenanceDocument.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/CountyMaintenanceDocument.xml	(revision 0)
@@ -0,0 +1,96 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="CountyMaintenanceDocument" parent="CountyMaintenanceDocument-parentBean" />
+
+  <bean id="CountyMaintenanceDocument-parentBean" abstract="true" parent="MaintenanceDocumentEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.CountyImpl" />
+    <property name="maintainableClass" value="org.kuali.rice.kns.maintenance.KualiMaintainableImpl" />
+    <property name="maintainableSections" >
+      <list>
+        <ref bean="CountyMaintenanceDocument-EditCounties" />
+      </list>
+    </property>
+    <property name="defaultExistenceChecks" >
+      <list>
+        <bean parent="ReferenceDefinition"
+              p:attributeName="country"
+              p:attributeToHighlightOnFail="postalCountryCode" />
+      </list>
+    </property>    
+    <property name="lockingKeys" >
+      <list>
+      	<value>postalCountryCode</value>
+        <value>countyCode</value>
+        <value>stateCode</value>
+      </list>
+    </property>
+    <property name="label" value="County" />
+    <property name="shortLabel" value="County" />
+    <property name="summary" value="County maintenance document" />
+    <property name="description" value="Document used to create or update County objects" />
+    <!--  <property name="helpDefinition" >
+      <bean parent="HelpDefinition"
+            p:parameterNamespace="KR-NS"
+            p:parameterName="COUNTY"
+            p:parameterDetailType="County" /> 
+    </property> -->
+    <property name="documentTypeName" value="CountyMaintenanceDocument" />
+    <property name="documentAuthorizerClass" value="org.kuali.rice.kns.document.authorization.MaintenanceDocumentAuthorizerBase" />
+    <property name="documentTypeCode" value="CNTY" />
+    <property name="workflowProperties" >
+      <ref bean="CountyMaintenanceDocument-workflowProperties" />
+    </property>
+    <property name="authorizations" >
+      <list>
+        <bean parent="AuthorizationDefinition">
+          <property name="action" value="initiate" />
+          <property name="authorizedGroups" >
+            <set>
+              <value>SY_MAINTENANCE_USERS</value>
+            </set>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Maintenance Section Definitions -->
+
+
+  <bean id="CountyMaintenanceDocument-EditCounties" parent="CountyMaintenanceDocument-EditCounties-parentBean" />
+
+  <bean id="CountyMaintenanceDocument-EditCounties-parentBean" abstract="true" parent="MaintainableSectionDefinition">
+    <property name="id" value="Edit Counties" />
+    <property name="title" value="Edit Counties" />
+    <property name="maintainableItems" >
+      <list>
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCountryCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="countyCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="stateCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="countyName"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="active" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Exported Workflow Properties -->
+
+
+  <bean id="CountyMaintenanceDocument-workflowProperties" parent="CountyMaintenanceDocument-workflowProperties-parentBean" />
+
+  <bean id="CountyMaintenanceDocument-workflowProperties-parentBean" abstract="true" parent="WorkflowProperties">
+  </bean>
+</beans>
Index: impl/src/main/java/org/kuali/rice/kns/bo/PostalCode.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/PostalCode.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/PostalCode.java	(revision 0)
@@ -0,0 +1,124 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo;
+
+import org.kuali.rice.kns.bo.ExternalizableBusinessObject;
+
+public interface PostalCode extends ExternalizableBusinessObject{
+
+    /**
+     * Gets the postalCode attribute.
+     * 
+     * @return Returns the postalCode
+     */
+    public abstract String getPostalCode();
+
+    /**
+     * Sets the postalCode attribute.
+     * 
+     * @param postalCode The postalCode to set.
+     */
+    public abstract void setPostalCode(String postalCode);
+
+    /**
+     * Gets the postalStateCode attribute.
+     * 
+     * @return Returns the postalStateCode
+     */
+    public abstract String getPostalStateCode();
+
+    /**
+     * Sets the postalStateCode attribute.
+     * 
+     * @param postalStateCode The postalStateCode to set.
+     */
+    public abstract void setPostalStateCode(String postalStateCode);
+
+    /**
+     * Gets the postalCityName attribute.
+     * 
+     * @return Returns the postalCityName
+     */
+    public abstract String getPostalCityName();
+
+    /**
+     * Sets the postalCityName attribute.
+     * 
+     * @param postalCityName The postalCityName to set.
+     */
+    public abstract void setPostalCityName(String postalCityName);
+
+    /**
+     * Gets the state attribute.
+     * 
+     * @return Returns the state.
+     */
+    public abstract State getState();
+
+    /**
+     * Sets the state attribute value.
+     * 
+     * @param state The state to set.
+     */
+    public abstract void setState(State state);
+
+    /**
+     * Gets the active attribute.
+     * 
+     * @return Returns the active.
+     */
+    public abstract boolean isActive();
+
+    /**
+     * Sets the active attribute value.
+     * 
+     * @param active The active to set.
+     */
+    public abstract void setActive(boolean active);
+
+    public abstract String getCountyCode();
+
+    public abstract void setCountyCode(String countyCode);
+
+    /**
+     * Gets the postalCountryCode attribute.
+     * 
+     * @return Returns the postalCountryCode.
+     */
+    public abstract String getPostalCountryCode();
+
+    /**
+     * Sets the postalCountryCode attribute value.
+     * 
+     * @param postalCountryCode The postalCountryCode to set.
+     */
+    public abstract void setPostalCountryCode(String postalCountryCode);
+
+    /**
+     * Gets the country attribute.
+     * 
+     * @return Returns the country.
+     */
+    public abstract Country getCountry();
+
+    /**
+     * Sets the country attribute value.
+     * 
+     * @param country The country to set.
+     */
+    public abstract void setCountry(Country country);
+
+}
\ No newline at end of file
Index: scripts/upgrades/0.9.3 to 0.9.4/kns-upgrade-workflow-documentType-0.9.3-to-0.9.4.xml
===================================================================
--- scripts/upgrades/0.9.3 to 0.9.4/kns-upgrade-workflow-documentType-0.9.3-to-0.9.4.xml	(revision 0)
+++ scripts/upgrades/0.9.3 to 0.9.4/kns-upgrade-workflow-documentType-0.9.3-to-0.9.4.xml	(revision 0)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
+  <documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
+     <documentType>
+      <name>CountryMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>Country</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>
+    <documentType>
+      <name>CountyMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>County</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>
+    <documentType>
+      <name>StateMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>State</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>
+    <documentType>
+      <name>PostalCodeMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>Postal Code</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>   
+  </documentTypes>
+</data>
Index: impl/src/main/java/org/kuali/rice/kns/bo/StateImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/StateImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/StateImpl.java	(revision 0)
@@ -0,0 +1,151 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.kuali.rice.kns.bo;
+
+import java.util.LinkedHashMap;
+
+import org.kuali.rice.kns.bo.Inactivateable;
+import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
+
+/**
+ * 
+ */
+public class StateImpl extends PersistableBusinessObjectBase implements Inactivateable, State {
+
+    private String postalCountryCode;
+    private String postalStateCode;
+    private String postalStateName;
+    private boolean active;
+
+    private Country country;
+
+    /**
+     * Default no-arg constructor.
+     */
+    public StateImpl() {
+
+    }
+
+    /**
+     * Gets the postalStateCode attribute.
+     * 
+     * @return Returns the postalStateCode
+     */
+    public String getPostalStateCode() {
+        return postalStateCode;
+    }
+
+    /**
+     * Sets the postalStateCode attribute.
+     * 
+     * @param postalStateCode The postalStateCode to set.
+     */
+    public void setPostalStateCode(String postalStateCode) {
+        this.postalStateCode = postalStateCode;
+    }
+
+    /**
+     * Gets the postalStateName attribute.
+     * 
+     * @return Returns the postalStateName
+     */
+    public String getPostalStateName() {
+        return postalStateName;
+    }
+
+    /**
+     * Sets the postalStateName attribute.
+     * 
+     * @param postalStateName The postalStateName to set.
+     */
+    public void setPostalStateName(String postalStateName) {
+        this.postalStateName = postalStateName;
+    }
+
+
+    /**
+     * @return Returns the code and description in format: xx - xxxxxxxxxxxxxxxx
+     */
+    public String getCodeAndDescription() {
+        String theString = getPostalStateCode() + " - " + getPostalStateName();
+        return theString;
+    }
+
+    /**
+     * @see org.kuali.rice.kns.bo.BusinessObjectBase#toStringMapper()
+     */
+    protected LinkedHashMap toStringMapper() {
+        LinkedHashMap m = new LinkedHashMap();
+        m.put("postalStateCode", this.postalStateCode);
+        return m;
+    }
+
+    /**
+     * Gets the active attribute.
+     * 
+     * @return Returns the active.
+     */
+    public boolean isActive() {
+        return active;
+    }
+
+    /**
+     * Sets the active attribute value.
+     * 
+     * @param active The active to set.
+     */
+    public void setActive(boolean active) {
+        this.active = active;
+    }
+
+    /**
+     * Gets the postalCountryCode attribute.
+     * 
+     * @return Returns the postalCountryCode.
+     */
+    public String getPostalCountryCode() {
+        return postalCountryCode;
+    }
+
+    /**
+     * Sets the postalCountryCode attribute value.
+     * 
+     * @param postalCountryCode The postalCountryCode to set.
+     */
+    public void setPostalCountryCode(String postalCountryCode) {
+        this.postalCountryCode = postalCountryCode;
+    }
+
+    /**
+     * Gets the country attribute.
+     * 
+     * @return Returns the country.
+     */
+    public Country getCountry() {
+        return country;
+    }
+
+    /**
+     * Sets the country attribute value.
+     * 
+     * @param country The country to set.
+     */
+    public void setCountry(Country country) {
+        this.country = country;
+    }
+
+}
Index: impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/Country.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/Country.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/Country.xml	(revision 0)
@@ -0,0 +1,155 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="Country" parent="Country-parentBean" />
+
+  <bean id="Country-parentBean" abstract="true" parent="BusinessObjectEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.CountryImpl" />
+    <property name="inquiryDefinition" >
+      <ref bean="Country-inquiryDefinition" />
+    </property>
+    <property name="lookupDefinition" >
+      <ref bean="Country-lookupDefinition" />
+    </property>
+    <property name="titleAttribute" value="postalCountryCode" />
+    <property name="objectLabel" value="Country" />
+    <property name="attributes" >
+      <list>
+        <ref bean="Country-postalCountryCode" />
+        <ref bean="Country-postalCountryName" />
+        <ref bean="Country-postalCountryRestrictedIndicator" />
+        <ref bean="Country-active" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Attribute Definitions -->
+
+
+  <bean id="Country-postalCountryCode" parent="Country-postalCountryCode-parentBean" />
+
+  <bean id="Country-postalCountryCode-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="postalCountryCode" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="Country Code" />
+    <property name="shortLabel" value="Country Code" />
+    <property name="maxLength" value="2" />
+    <property name="validationPattern" >
+      <bean parent="AlphaNumericValidationPattern" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="2" />
+    </property>
+    <property name="summary" value="Postal Country Code" />
+    <property name="description" value="The code uniquely identify a country." />
+  </bean>
+  <bean id="Country-postalCountryName" parent="Country-postalCountryName-parentBean" />
+
+  <bean id="Country-postalCountryName-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="postalCountryName" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="Country Name" />
+    <property name="shortLabel" value="Country Name" />
+    <property name="maxLength" value="50" />
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="50" />
+    </property>
+    <property name="summary" value="Postal Country Name" />
+    <property name="description" value="Postal Country Name..." />
+  </bean>
+  <bean id="Country-postalCountryRestrictedIndicator" parent="Country-postalCountryRestrictedIndicator-parentBean" />
+
+  <bean id="Country-postalCountryRestrictedIndicator-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+    <property name="name" value="postalCountryRestrictedIndicator" />
+    <property name="label" value="Country Restricted Indicator" />
+    <property name="shortLabel" value="Indicator" />
+    <property name="summary" value="Indicator for whether this is a postal country restricted." />
+    <property name="description" value="This is the indicator for whether this country is a postal country restricted." />
+  </bean>
+  <bean id="Country-active" parent="Country-active-parentBean" />
+
+  <bean id="Country-active-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+    <property name="name" value="active"/>
+  </bean>
+
+
+<!-- Business Object Inquiry Definition -->
+
+
+  <bean id="Country-inquiryDefinition" parent="Country-inquiryDefinition-parentBean" />
+
+  <bean id="Country-inquiryDefinition-parentBean" abstract="true" parent="InquiryDefinition">
+    <property name="title" value="Country Inquiry" />
+    <property name="inquirySections" >
+      <list>
+        <bean parent="InquirySectionDefinition">
+          <property name="title" value="" />
+          <property name="numberOfColumns" value="1" />
+          <property name="inquiryFields" >
+            <list>
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalCountryCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalCountryName" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalCountryRestrictedIndicator" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="active" />
+            </list>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Business Object Lookup Definition -->
+
+
+  <bean id="Country-lookupDefinition" parent="Country-lookupDefinition-parentBean" />
+
+  <bean id="Country-lookupDefinition-parentBean" abstract="true" parent="LookupDefinition">
+    <property name="title" value="Country Lookup" />
+    <property name="instructions" value="Lookup a Country" />
+    <property name="defaultSort" >
+      <bean parent="SortDefinition">
+        <property name="attributeNames" >
+          <list>
+            <value>postalCountryCode</value>
+          </list>
+        </property>
+      </bean>
+    </property>
+    <property name="lookupFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryName" />
+        <bean parent="FieldDefinition"
+              p:defaultValue="N"
+              p:attributeName="postalCountryRestrictedIndicator" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+    <property name="resultFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryRestrictedIndicator" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+  </bean>
+</beans>
Index: impl/src/main/java/org/kuali/rice/kns/bo/options/CountryNotRestrictedValuesFinder.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/options/CountryNotRestrictedValuesFinder.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/options/CountryNotRestrictedValuesFinder.java	(revision 0)
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo.options;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.commons.lang.StringUtils;
+import org.kuali.rice.kns.bo.Country;
+import org.kuali.rice.kns.service.KNSServiceLocator;
+import org.kuali.rice.kns.service.CountryService;
+import org.kuali.rice.kns.lookup.keyvalues.KeyValuesBase;
+import org.kuali.rice.kns.web.ui.KeyLabelPair;
+
+/**
+ * This class returns list of country value pairs.
+ */
+public class CountryNotRestrictedValuesFinder extends KeyValuesBase {
+
+    /*
+     * @see org.kuali.keyvalues.KeyValuesFinder#getKeyValues()
+     */
+    public List getKeyValues() {
+        List<Country> boList = KNSServiceLocator.getCountryService().findAllCountriesNotRestricted();
+        List<KeyLabelPair> keyValues = new ArrayList<KeyLabelPair>();
+
+        Country defaultCountry = null;
+        for (Country element : boList) {
+            String defaultCountryCode = KNSServiceLocator.getCountryService().getDefaultCountry().getPostalCountryCode();
+            
+            // Find default country code and pull it out so we can set it first in the results list later.
+            if (StringUtils.equals(defaultCountryCode, element.getPostalCountryCode())) {
+                defaultCountry = element;
+            }
+            else {
+                if(element.isActive()) {
+                    keyValues.add(new KeyLabelPair(element.getPostalCountryCode(), element.getPostalCountryName()));
+                }
+            }
+        }
+
+        List<KeyLabelPair> keyValueUSFirst = new ArrayList<KeyLabelPair>();
+        keyValueUSFirst.add(new KeyLabelPair("", ""));
+        keyValueUSFirst.add(new KeyLabelPair(defaultCountry.getPostalCountryCode(), defaultCountry.getPostalCountryName()));
+        keyValueUSFirst.addAll(keyValues);
+
+        return keyValueUSFirst;
+    }
+
+}
Index: impl/src/main/java/org/kuali/rice/kns/service/StateService.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/StateService.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/StateService.java	(revision 0)
@@ -0,0 +1,77 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service;
+
+import java.util.List;
+
+import org.kuali.rice.kns.bo.State;
+import org.kuali.rice.kns.bo.BusinessObject;
+
+public interface StateService {
+
+    /**
+     * get a state object based on the given state code and default country code. The default country code is set up in the system.
+     * 
+     * @param postalStateCode the given state code
+     * @return a state object based on the given state code and default country code
+     */
+    public State getByPrimaryId(String postalStateCode);
+
+    /**
+     * get a state object based on the given state code and country code
+     * 
+     * @param postalCountryCode the given country code
+     * @param postalStateCode the given state code
+     * @return a state object based on the given state code and country code
+     */
+    public State getByPrimaryId(String postalCountryCode, String postalStateCode);
+
+    /**
+     * get a state object based on the given state code and default country code. The default country code is set up in the system. The default country code is set up in
+     * the system. If the given postal state code is same as that of the given existing postal code, return the existing postal code;
+     * otherwise, retrieve a state object.
+     * 
+     * @param businessObject the business object that references to a country object
+     * @param postalStateCode the given state code
+     * @return a state object based on the given state code and default country code
+     */
+    public State getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalStateCode, State existingState);
+
+    /**
+     * get a state object based on the given state code and country code. If the given postal state code and country code
+     * are same as those of the given existing postal code, return the existing State; otherwise, retrieve a State
+     * object.
+     * 
+     * @param businessObject the business object that references to a country object 
+     * @param postalCountryCode the given country code
+     * @param postalStateCode the given state code
+     * @return a state object based on the given state code and country code
+     */
+    public State getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, String postalStateCode, State existingState);
+    
+    /**
+     * get all states in the system-default country 
+     * @return all states in the system-default country 
+     */
+    public List<State> findAllStates();
+    
+    /**
+     * get all states in the given country 
+     * @param postalCountryCode the given country code
+     * @return all states in the given country 
+     */
+    public List<State> findAllStates(String postalCountryCode);
+}
Index: impl/src/main/java/org/kuali/rice/kns/service/impl/CountyServiceImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/impl/CountyServiceImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/impl/CountyServiceImpl.java	(revision 0)
@@ -0,0 +1,110 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service.impl;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.log4j.Logger;
+import org.kuali.rice.kns.util.KNSPropertyConstants;
+import org.kuali.rice.kns.bo.County;
+import org.kuali.rice.kns.service.CountryService;
+import org.kuali.rice.kns.service.CountyService;
+import org.kuali.rice.kns.bo.BusinessObject;
+import org.kuali.rice.kns.service.KualiModuleService;
+
+/**
+ * This class...
+ */
+public class CountyServiceImpl implements CountyService {
+    private static Logger LOG = Logger.getLogger(CountyServiceImpl.class);
+
+    private CountryService countryService;
+    private KualiModuleService kualiModuleService;
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountyService#getByPrimaryId(java.lang.String, java.lang.String)
+     */
+    public County getByPrimaryId(String postalStateCode, String countyCode) {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+
+        return this.getByPrimaryId(postalCountryCode, postalStateCode, countyCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountyService#getByPrimaryId(java.lang.String, java.lang.String, java.lang.String)
+     */
+    public County getByPrimaryId(String postalCountryCode, String postalStateCode, String countyCode) {
+        if (StringUtils.isBlank(postalCountryCode) || StringUtils.isBlank(postalStateCode) || StringUtils.isBlank(countyCode)) {
+            LOG.info("PostalCountryCode, postalStateCode and countycode can be empty String.");
+            return null;
+        }
+
+        Map<String, Object> countyMap = new HashMap<String, Object>();
+        countyMap.put(KNSPropertyConstants.POSTAL_COUNTRY_CODE, postalCountryCode);
+        countyMap.put(KNSPropertyConstants.STATE_CODE, postalStateCode);
+        countyMap.put(KNSPropertyConstants.COUNTY_CODE, countyCode);
+
+        return kualiModuleService.getResponsibleModuleService(County.class).getExternalizableBusinessObject(County.class, countyMap);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountyService#getByPrimaryIdIfNecessary(java.lang.String, java.lang.String,
+     *      org.kuali.kfs.sys.businessobject.County)
+     */
+    public County getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalStateCode, String countyCode, County existingCounty) {
+        String postalCountryCode = countryService.getDefaultCountry().getPostalCountryCode();
+
+        return this.getByPrimaryIdIfNecessary(businessObject, postalCountryCode, postalStateCode, countyCode, existingCounty);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountyService#getByPrimaryIdIfNecessary(java.lang.String, java.lang.String, java.lang.String,
+     *      org.kuali.kfs.sys.businessobject.County)
+     */
+    public County getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, String postalStateCode, String countyCode, County existingCounty) {
+        if (existingCounty != null) {
+            String existingCountryCode = existingCounty.getPostalCountryCode();
+            String existingStateCode = existingCounty.getStateCode();
+            String existingCountyCode = existingCounty.getCountyCode();
+
+            if (StringUtils.equals(postalCountryCode, existingCountryCode) && StringUtils.equals(postalStateCode, existingStateCode) && StringUtils.equals(countyCode, existingCountyCode)) {
+                return existingCounty;
+            }
+        }
+
+        return this.getByPrimaryId(postalCountryCode, postalStateCode, countyCode);
+    }
+
+    /**
+     * Sets the kualiModuleService attribute value.
+     * 
+     * @param kualiModuleService The kualiModuleService to set.
+     */
+    public void setKualiModuleService(KualiModuleService kualiModuleService) {
+        this.kualiModuleService = kualiModuleService;
+    }
+
+    /**
+     * Sets the countryService attribute value.
+     * 
+     * @param countryService The countryService to set.
+     */
+    public void setCountryService(CountryService countryService) {
+        this.countryService = countryService;
+    }
+}
Index: impl/src/main/java/org/kuali/rice/kns/bo/PostalCodeImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/PostalCodeImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/PostalCodeImpl.java	(revision 0)
@@ -0,0 +1,191 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.kuali.rice.kns.bo;
+
+import java.util.LinkedHashMap;
+
+import org.kuali.rice.kns.bo.ExternalizableBusinessObject;
+import org.kuali.rice.kns.bo.Inactivateable;
+import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
+
+/**
+ * 
+ */
+public class PostalCodeImpl extends PersistableBusinessObjectBase implements Inactivateable, PostalCode {
+
+    private String postalCountryCode;
+    private String postalCode;
+    private String postalStateCode;
+    private String postalCityName;
+    private String buildingCode;
+    private String buildingRoomNumber;
+    private boolean active;
+    private String countyCode;
+
+    private State state;
+    private Country country;
+
+    /**
+     * Default no-arg constructor.
+     */
+    public PostalCodeImpl() {
+
+    }
+
+    /**
+     * Gets the postalCode attribute.
+     * 
+     * @return Returns the postalCode
+     */
+    public String getPostalCode() {
+        return postalCode;
+    }
+
+    /**
+     * Sets the postalCode attribute.
+     * 
+     * @param postalCode The postalZipCode to set.
+     */
+    public void setPostalCode(String postalCode) {
+        this.postalCode = postalCode;
+    }
+
+    /**
+     * Gets the postalStateCode attribute.
+     * 
+     * @return Returns the postalStateCode
+     */
+    public String getPostalStateCode() {
+        return postalStateCode;
+    }
+
+    /**
+     * Sets the postalStateCode attribute.
+     * 
+     * @param postalStateCode The postalStateCode to set.
+     */
+    public void setPostalStateCode(String postalStateCode) {
+        this.postalStateCode = postalStateCode;
+    }
+
+    /**
+     * Gets the postalCityName attribute.
+     * 
+     * @return Returns the postalCityName
+     */
+    public String getPostalCityName() {
+        return postalCityName;
+    }
+
+    /**
+     * Sets the postalCityName attribute.
+     * 
+     * @param postalCityName The postalCityName to set.
+     */
+    public void setPostalCityName(String postalCityName) {
+        this.postalCityName = postalCityName;
+    }
+
+    /**
+     * Gets the state attribute.
+     * 
+     * @return Returns the state.
+     */
+    public State getState() {
+        return state;
+    }
+
+    /**
+     * Sets the state attribute value.
+     * 
+     * @param state The state to set.
+     */
+    public void setState(State state) {
+        this.state = state;
+    }
+
+    /**
+     * @see org.kuali.rice.kns.bo.BusinessObjectBase#toStringMapper()
+     */
+    protected LinkedHashMap toStringMapper() {
+        LinkedHashMap m = new LinkedHashMap();
+        m.put("postalCode", this.postalCode);
+        return m;
+    }
+
+    /**
+     * Gets the active attribute.
+     * 
+     * @return Returns the active.
+     */
+    public boolean isActive() {
+        return active;
+    }
+
+    /**
+     * Sets the active attribute value.
+     * 
+     * @param active The active to set.
+     */
+    public void setActive(boolean active) {
+        this.active = active;
+    }
+
+    public String getCountyCode() {
+        return countyCode;
+    }
+
+    public void setCountyCode(String countyCode) {
+        this.countyCode = countyCode;
+    }
+
+    /**
+     * Gets the postalCountryCode attribute.
+     * 
+     * @return Returns the postalCountryCode.
+     */
+    public String getPostalCountryCode() {
+        return postalCountryCode;
+    }
+
+    /**
+     * Sets the postalCountryCode attribute value.
+     * 
+     * @param postalCountryCode The postalCountryCode to set.
+     */
+    public void setPostalCountryCode(String postalCountryCode) {
+        this.postalCountryCode = postalCountryCode;
+    }
+
+    /**
+     * Gets the country attribute.
+     * 
+     * @return Returns the country.
+     */
+    public Country getCountry() {
+        return country;
+    }
+
+    /**
+     * Sets the country attribute value.
+     * 
+     * @param country The country to set.
+     */
+    public void setCountry(Country country) {
+        this.country = country;
+    }
+}
Index: impl/src/main/config/ddl/tables/KR_STATE_T.table.ddl
===================================================================
--- impl/src/main/config/ddl/tables/KR_STATE_T.table.ddl	(revision 0)
+++ impl/src/main/config/ddl/tables/KR_STATE_T.table.ddl	(revision 0)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+CREATE TABLE KR_STATE_T 
+    (POSTAL_STATE_CD VARCHAR2(2) NOT NULL, 
+    POSTAL_CNTRY_CD VARCHAR2(2) DEFAULT 'US' NOT NULL, 
+    OBJ_ID VARCHAR2(36) NOT NULL, 
+    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
+    POSTAL_STATE_NM VARCHAR2(40), 
+    ACTV_IND VARCHAR2(1) DEFAULT 'Y' NOT NULL) 
+/ 
+ALTER TABLE KR_STATE_T 
+ADD CONSTRAINT KR_STATE_TP1 
+PRIMARY KEY (POSTAL_STATE_CD, POSTAL_CNTRY_CD) 
+/ 
+ALTER TABLE KR_STATE_T 
+ADD CONSTRAINT KR_STATE_TC0 
+UNIQUE (OBJ_ID) 
+/ 
+ALTER TABLE KR_STATE_T 
+ADD CONSTRAINT KR_STATE_TR1 
+FOREIGN KEY (POSTAL_CNTRY_CD) 
+REFERENCES KR_COUNTRY_T 
+/ 
+
+
+
Index: impl/src/main/java/org/kuali/rice/kns/service/impl/CountryServiceImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/impl/CountryServiceImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/impl/CountryServiceImpl.java	(revision 0)
@@ -0,0 +1,117 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service.impl;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.log4j.Logger;
+import org.kuali.rice.kns.util.KNSConstants;
+import org.kuali.rice.kns.util.KNSPropertyConstants;
+import org.kuali.rice.kns.bo.Country;
+import org.kuali.rice.kns.service.CountryService;
+//import org.kuali.kfs.sys.service.ParameterService;
+//import org.kuali.kfs.sys.service.impl.ParameterConstants.FINANCIAL_SYSTEM_ALL;
+import org.kuali.rice.kns.bo.BusinessObject;
+import org.kuali.rice.kns.service.KualiModuleService;
+
+public class CountryServiceImpl implements CountryService {
+    private static Logger LOG = Logger.getLogger(CountryServiceImpl.class);
+
+    private KualiModuleService kualiModuleService;
+    //TODO: 
+    //private ParameterService parameterService;
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountryService#getByPrimaryId(java.lang.String)
+     */
+    public Country getByPrimaryId(String postalCountryCode) {
+        if (StringUtils.isBlank(postalCountryCode)) {
+            LOG.info("The postalCountryCode cannot be empty String.");
+            return null;
+        }
+
+        Map<String, Object> postalCountryMap = new HashMap<String, Object>();
+        postalCountryMap.put(KNSPropertyConstants.POSTAL_COUNTRY_CODE, postalCountryCode);
+
+        return kualiModuleService.getResponsibleModuleService(Country.class).getExternalizableBusinessObject(Country.class, postalCountryMap);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountryService#getByPrimaryIdIfNecessary(org.kuali.rice.kns.bo.BusinessObject, java.lang.String, org.kuali.kfs.sys.businessobject.Country)
+     */
+    public Country getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, Country existingCountry) {
+        if (existingCountry != null) {
+            if (StringUtils.equals(postalCountryCode, existingCountry.getPostalCountryCode())) {
+                return existingCountry;
+            }
+        }
+
+        return this.getByPrimaryId(postalCountryCode);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountryService#getDefaultCountry()
+     */
+    public Country getDefaultCountry() {
+    	//TODO: use parameterService after it moved to rice
+        String postalCountryCode = "US"; //parameterService.getParameterValue(FINANCIAL_SYSTEM_ALL.class, KNSConstants.CoreApcParms.DEFAULT_COUNTRY);
+        return this.getByPrimaryId(postalCountryCode);
+    }
+    
+    /**
+     * @see org.kuali.kfs.sys.service.CountryService#findAllCountriesNotRestricted()
+     */
+    public List<Country> findAllCountriesNotRestricted() {
+        List<String> criteriaValues = new ArrayList<String>();
+        criteriaValues.add(null);
+        criteriaValues.add("N");
+        
+        Map<String, Object> postalCountryMap = new HashMap<String, Object>();
+        postalCountryMap.put(KNSPropertyConstants.POSTAL_COUNTRY_RESTRICTED_INDICATOR, criteriaValues);
+        
+        return kualiModuleService.getResponsibleModuleService(Country.class).getExternalizableBusinessObjectsList(Country.class, postalCountryMap);
+    }
+
+    /**
+     * @see org.kuali.kfs.sys.service.CountryService#findAllCountries()
+     */
+    public List<Country> findAllCountries() {
+        Map<String, Object> postalCountryMap = new HashMap<String, Object>();
+        return kualiModuleService.getResponsibleModuleService(Country.class).getExternalizableBusinessObjectsList(Country.class, postalCountryMap);
+    }
+
+    /**
+     * Sets the kualiModuleService attribute value.
+     * 
+     * @param kualiModuleService The kualiModuleService to set.
+     */
+    public void setKualiModuleService(KualiModuleService kualiModuleService) {
+        this.kualiModuleService = kualiModuleService;
+    }
+    
+    /**
+     * Sets the parameterService attribute value.
+     * 
+     * @param parameterService The parameterService to set.
+     */
+   // public void setParameterService(ParameterService parameterService) {
+   //     this.parameterService = parameterService;
+   // }
+}
Index: impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/PostalCode.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/PostalCode.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/PostalCode.xml	(revision 0)
@@ -0,0 +1,188 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="PostalCode" parent="PostalCode-parentBean" />
+
+  <bean id="PostalCode-parentBean" abstract="true" parent="BusinessObjectEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.PostalCodeImpl" />
+    <property name="inquiryDefinition" >
+      <ref bean="PostalCode-inquiryDefinition" />
+    </property>
+    <property name="lookupDefinition" >
+      <ref bean="PostalCode-lookupDefinition" />
+    </property>
+    <property name="titleAttribute" value="postalCode" />
+    <property name="objectLabel" value="Postal Code" />
+    <property name="attributes" >
+      <list>
+      	<ref bean="PostalCode-postalCountryCode" />
+        <ref bean="PostalCode-postalCode" />
+        <ref bean="PostalCode-postalStateCode" />
+        <ref bean="PostalCode-postalCityName" />
+        <ref bean="PostalCode-active" />
+        <ref bean="PostalCode-countyCode" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Attribute Definitions -->
+  <bean id="PostalCode-postalCountryCode" parent="Country-postalCountryCode-parentBean" />
+
+  <bean id="PostalCode-postalCode" parent="PostalCode-postalCode-parentBean" />
+
+  <bean id="PostalCode-postalCode-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="postalCode" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="Postal Code" />
+    <property name="shortLabel" value="Postal Code" />
+    <property name="maxLength" value="20" />
+    <property name="validationPattern" >
+      <bean parent="ZipcodeValidationPattern" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="15" />
+    </property>
+    <property name="summary" value="Postal Code" />
+    <property name="description" value="Postal Code either in 5-4 format or just 5 digits" />
+  </bean>
+  <bean id="PostalCode-postalStateCode" parent="PostalCode-postalStateCode-parentBean" />
+
+  <bean id="PostalCode-postalStateCode-parentBean" abstract="true" parent="State-postalStateCode">
+    <property name="label" value="State" />
+    <property name="shortLabel" value="State" />
+    <property name="summary" value="State" />
+    <property name="description" value="Postal State Code" />
+  </bean>
+  <bean id="PostalCode-postalCityName" parent="PostalCode-postalCityName-parentBean" />
+
+  <bean id="PostalCode-postalCityName-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="postalCityName" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="City Name" />
+    <property name="shortLabel" value="City Name" />
+    <property name="maxLength" value="30" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"
+            p:allowWhitespace="true" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="35" />
+    </property>
+    <property name="summary" value="City Name" />
+    <property name="description" value="City Name" />
+  </bean>
+
+  <bean id="PostalCode-active" parent="PostalCode-active-parentBean" />
+
+  <bean id="PostalCode-active-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+    <property name="name" value="active" />
+  </bean>
+
+  <bean id="PostalCode-countyCode" parent="PostalCode-countyCode-parentBean" />
+  
+  <bean id="PostalCode-countyCode-parentBean" abstract="true" parent="AttributeDefinition">
+  	<property name="name" value="countyCode" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="County Code" />
+    <property name="shortLabel" value="County" />
+    <property name="maxLength" value="10" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"
+            p:allowWhitespace="true" />
+    </property>
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="10" />
+    </property>
+    <property name="summary" value="County Code" />
+    <property name="description" value="County Code" />
+  </bean>
+<!-- Business Object Inquiry Definition -->
+
+
+  <bean id="PostalCode-inquiryDefinition" parent="PostalCode-inquiryDefinition-parentBean" />
+
+  <bean id="PostalCode-inquiryDefinition-parentBean" abstract="true" parent="InquiryDefinition">
+    <property name="title" value="Postal Code Inquiry" />
+    <property name="inquirySections" >
+      <list>
+        <bean parent="InquirySectionDefinition">
+          <property name="title" value="" />
+          <property name="numberOfColumns" value="1" />
+          <property name="inquiryFields" >
+            <list>
+              <bean parent="FieldDefinition"
+              		p:attributeName="postalCountryCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalStateCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalCityName" />
+              <bean parent="FieldDefinition"
+              		p:attributeName="countyCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="active" />
+            </list>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Business Object Lookup Definition -->
+
+
+  <bean id="PostalCode-lookupDefinition" parent="PostalCode-lookupDefinition-parentBean" />
+
+  <bean id="PostalCode-lookupDefinition-parentBean" abstract="true" parent="LookupDefinition">
+    <property name="title" value="Postal Code Lookup" />
+    <property name="instructions" value="Lookup a Postal Code" />
+    <property name="defaultSort" >
+      <bean parent="SortDefinition">
+        <property name="attributeNames" >
+          <list>
+            <value>postalCode</value>
+          </list>
+        </property>
+      </bean>
+    </property>
+    <property name="lookupFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalStateCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCityName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="countyCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+    <property name="resultFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalStateCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCityName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+  </bean>
+</beans>
Index: impl/src/main/java/org/kuali/rice/kns/bo/State.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/State.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/State.java	(revision 0)
@@ -0,0 +1,98 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo;
+
+import org.kuali.rice.kns.bo.ExternalizableBusinessObject;
+
+
+public interface State extends ExternalizableBusinessObject{
+
+    /**
+     * Gets the postalStateCode attribute.
+     * 
+     * @return Returns the postalStateCode
+     */
+    public abstract String getPostalStateCode();
+
+    /**
+     * Sets the postalStateCode attribute.
+     * 
+     * @param postalStateCode The postalStateCode to set.
+     */
+    public abstract void setPostalStateCode(String postalStateCode);
+
+    /**
+     * Gets the postalStateName attribute.
+     * 
+     * @return Returns the postalStateName
+     */
+    public abstract String getPostalStateName();
+
+    /**
+     * Sets the postalStateName attribute.
+     * 
+     * @param postalStateName The postalStateName to set.
+     */
+    public abstract void setPostalStateName(String postalStateName);
+
+    /**
+     * @return Returns the code and description in format: xx - xxxxxxxxxxxxxxxx
+     */
+    public abstract String getCodeAndDescription();
+
+    /**
+     * Gets the active attribute.
+     * 
+     * @return Returns the active.
+     */
+    public abstract boolean isActive();
+
+    /**
+     * Sets the active attribute value.
+     * 
+     * @param active The active to set.
+     */
+    public abstract void setActive(boolean active);
+
+    /**
+     * Gets the postalCountryCode attribute.
+     * 
+     * @return Returns the postalCountryCode.
+     */
+    public abstract String getPostalCountryCode();
+
+    /**
+     * Sets the postalCountryCode attribute value.
+     * 
+     * @param postalCountryCode The postalCountryCode to set.
+     */
+    public abstract void setPostalCountryCode(String postalCountryCode);
+
+    /**
+     * Gets the country attribute.
+     * 
+     * @return Returns the country.
+     */
+    public abstract Country getCountry();
+
+    /**
+     * Sets the country attribute value.
+     * 
+     * @param country The country to set.
+     */
+    public abstract void setCountry(Country country);
+
+}
\ No newline at end of file
Index: impl/src/main/java/org/kuali/rice/kns/service/CountryService.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/CountryService.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/CountryService.java	(revision 0)
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service;
+
+import java.util.List;
+
+import org.kuali.rice.kns.bo.Country;
+import org.kuali.rice.kns.bo.BusinessObject;
+
+public interface CountryService {
+
+    /**
+     * get a country object based on the given country code.
+     * 
+     * @param postalCountryCode the given country code
+     * @return a country object with the given country code
+     */
+    Country getByPrimaryId(String postalCountryCode);
+
+    /**
+     * get a country object based on the given country code. If the postal country code of the existing country is same as the given
+     * country code, return the existing country; otherwise, retrieve a new country object.
+     * 
+     * @param businessObject the business object that references to a country object
+     * @param postalCountryCode the given country code
+     * @param existingCountry the given existing ccountry
+     * @return a country object with the given country code if necessary
+     */
+    Country getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, Country existingCountry);
+    
+    /**
+     * get the system default country, which is configured as a system parameter
+     * @return the system default country
+     */
+    Country getDefaultCountry();
+
+    /**
+     * get all countries that are note restricated
+     * 
+     * @return all countries that are note restricated
+     */
+    List<Country> findAllCountriesNotRestricted();
+
+    /**
+     * get all countries
+     * 
+     * @return all countries
+     */
+    List<Country> findAllCountries();
+}
Index: impl/src/main/java/org/kuali/rice/kns/util/KNSPropertyConstants.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/util/KNSPropertyConstants.java	(revision 5087)
+++ impl/src/main/java/org/kuali/rice/kns/util/KNSPropertyConstants.java	(working copy)
@@ -103,5 +103,11 @@
 	public static final String WORKFLOW_DOCUMENT = "workflowDocument";
 	public static final String XML_DOCUMENT_CONTENTS = "xmlDocumentContents";
 	public static final String LAST_UPDATED_DATE = "lastUpdatedDate";	
+	public static final String POSTAL_COUNTRY_RESTRICTED_INDICATOR = "postalCountryRestrictedIndicator";
+	public static final String POSTAL_COUNTRY_CODE = "postalCountryCode";
+	public static final String STATE_CODE = "stateCode";
+    public static final String COUNTY_CODE = "countyCode";
+    public static final String POSTAL_ZIP_CODE = "postalZipCode";
+    public static final String POSTAL_STATE_CODE = "postalStateCode";
+    public static final String POSTAL_CODE = "postalCode";
 }
-
Index: impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/StateMaintenanceDocument.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/StateMaintenanceDocument.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/document/datadictionary/StateMaintenanceDocument.xml	(revision 0)
@@ -0,0 +1,92 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="StateMaintenanceDocument" parent="StateMaintenanceDocument-parentBean" />
+
+  <bean id="StateMaintenanceDocument-parentBean" abstract="true" parent="MaintenanceDocumentEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.StateImpl" />
+    <property name="maintainableClass" value="org.kuali.rice.kns.maintenance.KualiMaintainableImpl" />
+    <property name="maintainableSections" >
+      <list>
+        <ref bean="StateMaintenanceDocument-EditStates" />
+      </list>
+    </property>
+    <property name="defaultExistenceChecks" >
+      <list>
+        <bean parent="ReferenceDefinition"
+              p:attributeName="country"
+              p:attributeToHighlightOnFail="postalCountryCode" />
+      </list>
+    </property>    
+    <property name="lockingKeys" >
+      <list>
+      	<value>postalCountryCode</value>
+        <value>postalStateCode</value>
+      </list>
+    </property>
+    <property name="label" value="State" />
+    <property name="shortLabel" value="State" />
+    <property name="summary" value="State maintenance document" />
+    <property name="description" value="Document used to create or update State objects" />
+    <property name="helpDefinition" >
+      <bean parent="HelpDefinition"
+            p:parameterNamespace="KR-NS"
+            p:parameterName="STATE"
+            p:parameterDetailType="State" />
+    </property>
+    <property name="documentTypeName" value="StateMaintenanceDocument" />
+    <property name="documentAuthorizerClass" value="org.kuali.rice.kns.document.authorization.MaintenanceDocumentAuthorizerBase" />
+    <property name="documentTypeCode" value="STAT" />
+    <property name="workflowProperties" >
+      <ref bean="StateMaintenanceDocument-workflowProperties" />
+    </property>
+    <property name="authorizations" >
+      <list>
+        <bean parent="AuthorizationDefinition">
+          <property name="action" value="initiate" />
+          <property name="authorizedGroups" >
+            <set>
+              <value>SY_MAINTENANCE_USERS</value>
+            </set>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Maintenance Section Definitions -->
+
+
+  <bean id="StateMaintenanceDocument-EditStates" parent="StateMaintenanceDocument-EditStates-parentBean" />
+
+  <bean id="StateMaintenanceDocument-EditStates-parentBean" abstract="true" parent="MaintainableSectionDefinition">
+    <property name="id" value="Edit States" />
+    <property name="title" value="Edit States" />
+    <property name="maintainableItems" >
+      <list>
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalCountryCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalStateCode"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="postalStateName"
+              p:required="true" />
+        <bean parent="MaintainableFieldDefinition"
+              p:name="active" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Exported Workflow Properties -->
+
+
+  <bean id="StateMaintenanceDocument-workflowProperties" parent="StateMaintenanceDocument-workflowProperties-parentBean" />
+
+  <bean id="StateMaintenanceDocument-workflowProperties-parentBean" abstract="true" parent="WorkflowProperties">
+  </bean>
+</beans>
Index: impl/src/main/java/org/kuali/rice/kns/bo/CountryImpl.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/CountryImpl.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/CountryImpl.java	(revision 0)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo;
+
+import java.util.LinkedHashMap;
+
+import org.kuali.rice.kns.bo.Inactivateable;
+import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
+
+/**
+ *
+ */
+
+public class CountryImpl extends PersistableBusinessObjectBase implements Inactivateable, Country{
+
+    private String postalCountryCode;
+    private String postalCountryName;
+    private boolean postalCountryRestrictedIndicator;
+    private boolean active;
+
+    /**
+     * Default no-arg constructor.
+     */
+
+    public CountryImpl() {
+        super();
+    }
+
+    /**
+     * @param postalCountryCode - The postalCountryCode to set
+     */
+    public void setPostalCountryCode(String postalCountryCode) {
+        this.postalCountryCode = postalCountryCode;
+    }
+
+    /**
+     * @return Returns the postalCountryCode
+     */
+    public String getPostalCountryCode() {
+        return postalCountryCode;
+    }
+
+    /**
+     * @param postalCountryName - The postalCountryName to set
+     */
+    public void setPostalCountryName(String postalCountryName) {
+        this.postalCountryName = postalCountryName;
+    }
+
+    /**
+     * @return Returns the postalCountryName
+     */
+    public String getPostalCountryName() {
+        return postalCountryName;
+    }
+
+    /**
+     * Gets the postalCountryRestrictedIndicator attribute.
+     * 
+     * @return Returns the postalCountryRestrictedIndicator.
+     */
+    public boolean isPostalCountryRestrictedIndicator() {
+        return postalCountryRestrictedIndicator;
+    }
+
+    /**
+     * Sets the postalCountryRestrictedIndicator attribute value.
+     * 
+     * @param postalCountryRestrictedIndicator The postalCountryRestrictedIndicator to set.
+     */
+    public void setPostalCountryRestrictedIndicator(boolean postalCountryRestrictedIndicator) {
+        this.postalCountryRestrictedIndicator = postalCountryRestrictedIndicator;
+    }
+
+    /**
+     * @see org.kuali.rice.kns.bo.BusinessObjectBase#toStringMapper()
+     */
+    protected LinkedHashMap toStringMapper() {
+        LinkedHashMap m = new LinkedHashMap();
+
+        m.put("postalCountryCode", getPostalCountryCode());
+
+        return m;
+    }
+
+    /**
+     * Gets the active attribute. 
+     * @return Returns the active.
+     */
+    public boolean isActive() {
+        return active;
+    }
+
+    /**
+     * Sets the active attribute value.
+     * @param active The active to set.
+     */
+    public void setActive(boolean active) {
+        this.active = active;
+    }
+
+}
Index: impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/State.xml
===================================================================
--- impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/State.xml	(revision 0)
+++ impl/src/main/resources/org/kuali/rice/kns/bo/datadictionary/State.xml	(revision 0)
@@ -0,0 +1,166 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="State" parent="State-parentBean" />
+
+  <bean id="State-parentBean" abstract="true" parent="BusinessObjectEntry">
+    <property name="businessObjectClass" value="org.kuali.rice.kns.bo.StateImpl" />
+    <property name="inquiryDefinition" >
+      <ref bean="State-inquiryDefinition" />
+    </property>
+    <property name="lookupDefinition" >
+      <ref bean="State-lookupDefinition" />
+    </property>
+    <property name="titleAttribute" value="postalStateCode" />
+    <property name="objectLabel" value="State" />
+    <property name="attributes" >
+      <list>
+        <ref bean="State-postalCountryCode" />
+        <ref bean="State-postalStateCode" />
+        <ref bean="State-postalStateName" />
+        <ref bean="State-codeAndDescription" />
+        <ref bean="State-active" />
+      </list>
+    </property>
+  </bean>
+
+<!-- Attribute Definitions -->
+  <bean id="State-postalCountryCode" parent="Country-postalCountryCode-parentBean" />
+
+  <bean id="State-postalStateCode" parent="State-postalStateCode-parentBean" />
+
+  <bean id="State-postalStateCode-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="postalStateCode" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="State Abbreviation" />
+    <property name="shortLabel" value="State Abbr." />
+    <property name="maxLength" value="2" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"
+            p:exactLength="2" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="2" />
+    </property>
+    <property name="summary" value="State Abbreviation" />
+    <property name="description" value="The two digit code for a state" />
+  </bean>
+  <bean id="State-postalStateName" parent="State-postalStateName-parentBean" />
+
+  <bean id="State-postalStateName-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="postalStateName" />
+    <property name="forceUppercase" value="true" />
+    <property name="label" value="State Name" />
+    <property name="shortLabel" value="State Name" />
+    <property name="maxLength" value="40" />
+    <property name="validationPattern" >
+      <bean parent="AnyCharacterValidationPattern"
+            p:allowWhitespace="true" />
+    </property>
+    <property name="required" value="true" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="25" />
+    </property>
+    <property name="summary" value="State Name" />
+    <property name="description" value="The name assigned to this state." />
+  </bean>
+  <bean id="State-codeAndDescription" parent="State-codeAndDescription-parentBean" />
+
+  <bean id="State-codeAndDescription-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="codeAndDescription" />
+    <property name="forceUppercase" value="false" />
+    <property name="label" value="State Code" />
+    <property name="shortLabel" value="State Code" />
+    <property name="maxLength" value="45" />
+    <property name="control" >
+      <bean parent="TextControlDefinition"
+            p:size="45" />
+    </property>
+    <property name="summary" value="State Code" />
+    <property name="description" value="State Code" />
+  </bean>
+  <bean id="State-active" parent="State-active-parentBean" />
+
+  <bean id="State-active-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+    <property name="name" value="active" />
+  </bean>
+
+
+<!-- Business Object Inquiry Definition -->
+
+
+  <bean id="State-inquiryDefinition" parent="State-inquiryDefinition-parentBean" />
+
+  <bean id="State-inquiryDefinition-parentBean" abstract="true" parent="InquiryDefinition">
+    <property name="title" value="State Inquiry" />
+    <property name="inquirySections" >
+      <list>
+        <bean parent="InquirySectionDefinition">
+          <property name="title" value="" />
+          <property name="numberOfColumns" value="1" />
+          <property name="inquiryFields" >
+            <list>
+              <bean parent="FieldDefinition"
+              		p:attributeName="postalCountryCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalStateCode" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="postalStateName" />
+              <bean parent="FieldDefinition"
+                    p:attributeName="active" />
+            </list>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+<!-- Business Object Lookup Definition -->
+
+
+  <bean id="State-lookupDefinition" parent="State-lookupDefinition-parentBean" />
+
+  <bean id="State-lookupDefinition-parentBean" abstract="true" parent="LookupDefinition">
+    <property name="title" value="State Code Lookup" />
+    <property name="instructions" value="Lookup a State" />
+    <property name="defaultSort" >
+      <bean parent="SortDefinition">
+        <property name="attributeNames" >
+          <list>
+            <value>postalStateCode</value>
+          </list>
+        </property>
+      </bean>
+    </property>
+    <property name="lookupFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalStateCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalStateName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+    <property name="resultFields" >
+      <list>
+        <bean parent="FieldDefinition"
+              p:attributeName="postalCountryCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalStateCode" />
+        <bean parent="FieldDefinition"
+              p:attributeName="postalStateName" />
+        <bean parent="FieldDefinition"
+              p:attributeName="active" />
+      </list>
+    </property>
+  </bean>
+</beans>
Index: impl/src/main/java/org/kuali/rice/kns/service/KNSServiceLocator.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/KNSServiceLocator.java	(revision 5087)
+++ impl/src/main/java/org/kuali/rice/kns/service/KNSServiceLocator.java	(working copy)
@@ -1,422 +1,433 @@
-/*
- * Copyright 2007 The Kuali Foundation.
- * 
- * Licensed under the Educational Community License, Version 1.0 (the "License"); you may not use this file except in
- * compliance with the License. You may obtain a copy of the License at
- * 
- * http://www.opensource.org/licenses/ecl1.php
- * 
- * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS
- * IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- */
-package org.kuali.rice.kns.service;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import javax.persistence.EntityManagerFactory;
-
-import org.kuali.rice.core.resourceloader.GlobalResourceLoader;
-import org.kuali.rice.core.resourceloader.RiceResourceLoaderFactory;
-import org.kuali.rice.core.service.EncryptionService;
-import org.kuali.rice.kns.inquiry.Inquirable;
-import org.kuali.rice.kns.lookup.LookupResultsService;
-import org.kuali.rice.kns.lookup.Lookupable;
-import org.kuali.rice.kns.question.Question;
-import org.kuali.rice.kns.util.OjbCollectionHelper;
-import org.kuali.rice.kns.util.cache.MethodCacheInterceptor;
-import org.kuali.rice.kns.util.spring.NamedOrderedListBean;
-import org.kuali.rice.kns.workflow.service.KualiWorkflowInfo;
-import org.kuali.rice.kns.workflow.service.WorkflowDocumentService;
-import org.kuali.rice.kns.workflow.service.WorkflowGroupService;
-import org.springframework.beans.factory.NoSuchBeanDefinitionException;
-import org.springframework.transaction.PlatformTransactionManager;
-import org.springframework.transaction.support.TransactionTemplate;
-
-import com.opensymphony.oscache.general.GeneralCacheAdministrator;
-
-public class KNSServiceLocator<T extends Object> {
-
-    public static final String VALIDATION_COMPLETION_UTILS = "validationCompletionUtils";
-
-    public static Object getService(String serviceName) {
-	return GlobalResourceLoader.getService(serviceName);
-    }
-
-    public static <T> T getNervousSystemContextBean(Class<T> type) {
-	Collection<T> beansOfType = getBeansOfType(type).values();
-	if (beansOfType.isEmpty()) {
-	    throw new NoSuchBeanDefinitionException("No beans of this type in the KNS application context: "
-		    + type.getName());
-	}
-	if (beansOfType.size() > 1) {
-	    return getNervousSystemContextBean(type, type.getSimpleName().substring(0, 1).toLowerCase() + type.getSimpleName().substring(1));
-	}
-	return beansOfType.iterator().next();
-    }
-
-    @SuppressWarnings("unchecked")
-    public static <T> T getNervousSystemContextBean(Class<T> type, String name) {
-	return (T) RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBean(name);
-    }
-
-    @SuppressWarnings("unchecked")
-    public static <T> Map<String, T> getBeansOfType(Class<T> type) {
-	return new HashMap((Map) RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeansOfType(type));
-    }
-
-    public static String[] getBeanNames() {
-	return RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanDefinitionNames();
-    }
-
-    public static Set<String> getSingletonNames() {
-	Set<String> singletonNames = new HashSet<String>();
-	Collections.addAll(singletonNames, RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanFactory()
-		.getSingletonNames());
-	return singletonNames;
-    }
-
-    public static Set<Class> getSingletonTypes() {
-	Set<Class> singletonTypes = new HashSet<Class>();
-	for (String singletonName : getSingletonNames()) {
-	    singletonTypes.add(RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanFactory().getType(
-		    singletonName));
-	}
-	return singletonTypes;
-    }
-
-    public static boolean isSingleton( String beanName ) {
-    	try {
-    	    return RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanFactory().isSingleton(beanName);
-    	} catch ( NoSuchBeanDefinitionException ex ) {
-    	    // service is not in Spring so we can't assume
-    	    return false;
-    	}
-    }
-            
-    public static List<NamedOrderedListBean> getNamedOrderedListBeans(String listName) {
-	List<NamedOrderedListBean> namedOrderedListBeans = new ArrayList<NamedOrderedListBean>();
-	for (Object namedOrderedListBean : RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeansOfType(
-		NamedOrderedListBean.class).values()) {
-	    if (((NamedOrderedListBean) namedOrderedListBean).getName().equals(listName)) {
-		namedOrderedListBeans.add((NamedOrderedListBean) namedOrderedListBean);
-	    }
-	}
-	return namedOrderedListBeans;
-    }
-
-    public static final String ENCRYPTION_SERVICE = "encryptionService";
-
-    public static final EncryptionService getEncryptionService() {
-	return (EncryptionService) getService(ENCRYPTION_SERVICE);
-    }
-
-    public static final String MAIL_SERVICE = "mailService";
-
-    public static final MailService getMailService() {
-	return (MailService) getService(MAIL_SERVICE);
-    }
-
-    public static final String METHOD_CACHE_INTERCEPTOR = "methodCacheInterceptor";
-
-    public static MethodCacheInterceptor getMethodCacheInterceptor() {
-	return (MethodCacheInterceptor) getService(METHOD_CACHE_INTERCEPTOR);
-    }
-
-    public static final String XML_OBJECT_SERIALIZER_SERVICE = "xmlObjectSerializerService";
-
-    public static XmlObjectSerializerService getXmlObjectSerializerService() {
-	return (XmlObjectSerializerService) getService(XML_OBJECT_SERIALIZER_SERVICE);
-    }
-
-    public static final String DOCUMENT_SERVICE = "documentService";
-
-    public static DocumentService getDocumentService() {
-	return (DocumentService) getService(DOCUMENT_SERVICE);
-    }
-
-    public static final String DOCUMENT_HEADER_SERVICE = "documentHeaderService";
-
-    public static DocumentHeaderService getDocumentHeaderService() {
-    return (DocumentHeaderService) getService(DOCUMENT_HEADER_SERVICE);
-    }
-
-    public static final String POST_PROCESSOR_SERVICE = "postProcessorService";
-
-    public static PostProcessorService getPostProcessorService() {
-	return (PostProcessorService) getService(POST_PROCESSOR_SERVICE);
-    }
-
-    public static final String DATETIME_SERVICE = "dateTimeService";
-
-    public static DateTimeService getDateTimeService() {
-	return (DateTimeService) getService(DATETIME_SERVICE);
-    }
-
-    public static final String WORKFLOW_GROUP_SERVICE = "workflowGroupService";
-
-    public static WorkflowGroupService getWorkflowGroupService() {
-	return (WorkflowGroupService) getService(WORKFLOW_GROUP_SERVICE);
-    }
-
-    public static final String DOCUMENT_TYPE_SERVICE = "documentTypeService";
-
-    public static DocumentTypeService getDocumentTypeService() {
-	return (DocumentTypeService) getService(DOCUMENT_TYPE_SERVICE);
-    }
-
-    public static final String LOOKUP_SERVICE = "lookupService";
-
-    public static LookupService getLookupService() {
-	return (LookupService) getService(LOOKUP_SERVICE);
-    }
-
-    public static final String LOOKUP_RESULTS_SERVICE = "lookupResultsService";
-
-    public static LookupResultsService getLookupResultsService() {
-	return (LookupResultsService) getService(LOOKUP_RESULTS_SERVICE);
-    }
-
-    public static final String KUALI_MODULE_SERVICE = "kualiModuleService";
-
-    public static KualiModuleService getKualiModuleService() {
-	return (KualiModuleService) getService(KUALI_MODULE_SERVICE);
-    }
-
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License"); you may not use this file except in
+ * compliance with the License. You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS
+ * IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
+ * language governing permissions and limitations under the License.
+ */
+package org.kuali.rice.kns.service;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import javax.persistence.EntityManagerFactory;
+
+import org.kuali.rice.core.resourceloader.GlobalResourceLoader;
+import org.kuali.rice.core.resourceloader.RiceResourceLoaderFactory;
+import org.kuali.rice.core.service.EncryptionService;
+import org.kuali.rice.kns.inquiry.Inquirable;
+import org.kuali.rice.kns.lookup.LookupResultsService;
+import org.kuali.rice.kns.lookup.Lookupable;
+import org.kuali.rice.kns.question.Question;
+import org.kuali.rice.kns.util.OjbCollectionHelper;
+import org.kuali.rice.kns.util.cache.MethodCacheInterceptor;
+import org.kuali.rice.kns.util.spring.NamedOrderedListBean;
+import org.kuali.rice.kns.workflow.service.KualiWorkflowInfo;
+import org.kuali.rice.kns.workflow.service.WorkflowDocumentService;
+import org.kuali.rice.kns.workflow.service.WorkflowGroupService;
+import org.springframework.beans.factory.NoSuchBeanDefinitionException;
+import org.springframework.transaction.PlatformTransactionManager;
+import org.springframework.transaction.support.TransactionTemplate;
+
+import com.opensymphony.oscache.general.GeneralCacheAdministrator;
+
+public class KNSServiceLocator<T extends Object> {
+
+    public static final String VALIDATION_COMPLETION_UTILS = "validationCompletionUtils";
+
+    public static Object getService(String serviceName) {
+	return GlobalResourceLoader.getService(serviceName);
+    }
+
+    public static <T> T getNervousSystemContextBean(Class<T> type) {
+	Collection<T> beansOfType = getBeansOfType(type).values();
+	if (beansOfType.isEmpty()) {
+	    throw new NoSuchBeanDefinitionException("No beans of this type in the KNS application context: "
+		    + type.getName());
+	}
+	if (beansOfType.size() > 1) {
+	    return getNervousSystemContextBean(type, type.getSimpleName().substring(0, 1).toLowerCase() + type.getSimpleName().substring(1));
+	}
+	return beansOfType.iterator().next();
+    }
+
+    @SuppressWarnings("unchecked")
+    public static <T> T getNervousSystemContextBean(Class<T> type, String name) {
+	return (T) RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBean(name);
+    }
+
+    @SuppressWarnings("unchecked")
+    public static <T> Map<String, T> getBeansOfType(Class<T> type) {
+	return new HashMap((Map) RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeansOfType(type));
+    }
+
+    public static String[] getBeanNames() {
+	return RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanDefinitionNames();
+    }
+
+    public static Set<String> getSingletonNames() {
+	Set<String> singletonNames = new HashSet<String>();
+	Collections.addAll(singletonNames, RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanFactory()
+		.getSingletonNames());
+	return singletonNames;
+    }
+
+    public static Set<Class> getSingletonTypes() {
+	Set<Class> singletonTypes = new HashSet<Class>();
+	for (String singletonName : getSingletonNames()) {
+	    singletonTypes.add(RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanFactory().getType(
+		    singletonName));
+	}
+	return singletonTypes;
+    }
+
+    public static boolean isSingleton( String beanName ) {
+    	try {
+    	    return RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeanFactory().isSingleton(beanName);
+    	} catch ( NoSuchBeanDefinitionException ex ) {
+    	    // service is not in Spring so we can't assume
+    	    return false;
+    	}
+    }
+            
+    public static List<NamedOrderedListBean> getNamedOrderedListBeans(String listName) {
+	List<NamedOrderedListBean> namedOrderedListBeans = new ArrayList<NamedOrderedListBean>();
+	for (Object namedOrderedListBean : RiceResourceLoaderFactory.getSpringResourceLoader().getContext().getBeansOfType(
+		NamedOrderedListBean.class).values()) {
+	    if (((NamedOrderedListBean) namedOrderedListBean).getName().equals(listName)) {
+		namedOrderedListBeans.add((NamedOrderedListBean) namedOrderedListBean);
+	    }
+	}
+	return namedOrderedListBeans;
+    }
+
+    public static final String ENCRYPTION_SERVICE = "encryptionService";
+
+    public static final EncryptionService getEncryptionService() {
+	return (EncryptionService) getService(ENCRYPTION_SERVICE);
+    }
+
+    public static final String MAIL_SERVICE = "mailService";
+
+    public static final MailService getMailService() {
+	return (MailService) getService(MAIL_SERVICE);
+    }
+
+    public static final String METHOD_CACHE_INTERCEPTOR = "methodCacheInterceptor";
+
+    public static MethodCacheInterceptor getMethodCacheInterceptor() {
+	return (MethodCacheInterceptor) getService(METHOD_CACHE_INTERCEPTOR);
+    }
+
+    public static final String XML_OBJECT_SERIALIZER_SERVICE = "xmlObjectSerializerService";
+
+    public static XmlObjectSerializerService getXmlObjectSerializerService() {
+	return (XmlObjectSerializerService) getService(XML_OBJECT_SERIALIZER_SERVICE);
+    }
+
+    public static final String DOCUMENT_SERVICE = "documentService";
+
+    public static DocumentService getDocumentService() {
+	return (DocumentService) getService(DOCUMENT_SERVICE);
+    }
+
+    public static final String DOCUMENT_HEADER_SERVICE = "documentHeaderService";
+
+    public static DocumentHeaderService getDocumentHeaderService() {
+    return (DocumentHeaderService) getService(DOCUMENT_HEADER_SERVICE);
+    }
+
+    public static final String POST_PROCESSOR_SERVICE = "postProcessorService";
+
+    public static PostProcessorService getPostProcessorService() {
+	return (PostProcessorService) getService(POST_PROCESSOR_SERVICE);
+    }
+
+    public static final String DATETIME_SERVICE = "dateTimeService";
+
+    public static DateTimeService getDateTimeService() {
+	return (DateTimeService) getService(DATETIME_SERVICE);
+    }
+
+    public static final String WORKFLOW_GROUP_SERVICE = "workflowGroupService";
+
+    public static WorkflowGroupService getWorkflowGroupService() {
+	return (WorkflowGroupService) getService(WORKFLOW_GROUP_SERVICE);
+    }
+
+    public static final String DOCUMENT_TYPE_SERVICE = "documentTypeService";
+
+    public static DocumentTypeService getDocumentTypeService() {
+	return (DocumentTypeService) getService(DOCUMENT_TYPE_SERVICE);
+    }
+
+    public static final String LOOKUP_SERVICE = "lookupService";
+
+    public static LookupService getLookupService() {
+	return (LookupService) getService(LOOKUP_SERVICE);
+    }
+
+    public static final String LOOKUP_RESULTS_SERVICE = "lookupResultsService";
+
+    public static LookupResultsService getLookupResultsService() {
+	return (LookupResultsService) getService(LOOKUP_RESULTS_SERVICE);
+    }
+
+    public static final String KUALI_MODULE_SERVICE = "kualiModuleService";
+
+    public static KualiModuleService getKualiModuleService() {
+	return (KualiModuleService) getService(KUALI_MODULE_SERVICE);
+    }
+
     public static final String KIM_GROUP_SERVICE = "kimGroupService";
-
-    public static final String WORKFLOW_DOCUMENT_SERVICE = "workflowDocumentService";
-
-    public static WorkflowDocumentService getWorkflowDocumentService() {
-	return (WorkflowDocumentService) getService(WORKFLOW_DOCUMENT_SERVICE);
-    }
-
-    public static final String WORKFLOW_INFO_SERVICE = "workflowInfoService";
-
-    public static KualiWorkflowInfo getWorkflowInfoService() {
-	return (KualiWorkflowInfo) getService(WORKFLOW_INFO_SERVICE);
-    }
-
-    public static final String KUALI_CONFIGURATION_SERVICE = "kualiConfigurationService";
-
-    public static KualiConfigurationService getKualiConfigurationService() {
-	return (KualiConfigurationService) getService(KUALI_CONFIGURATION_SERVICE);
-    }
-
-    public static final String BUSINESS_OBJECT_DICTIONARY_SERVICE = "businessObjectDictionaryService";
-
-    public static BusinessObjectDictionaryService getBusinessObjectDictionaryService() {
-	return (BusinessObjectDictionaryService) getService(BUSINESS_OBJECT_DICTIONARY_SERVICE);
-    }
-
-    public static final String BUSINESS_OBJECT_METADATA_SERVICE = "businessObjectMetaDataService";
-
-    public static BusinessObjectMetaDataService getBusinessObjectMetaDataService() {
-	return (BusinessObjectMetaDataService) getService(BUSINESS_OBJECT_METADATA_SERVICE);
-    }
-
-    public static final String TRANSACTIONAL_DOCUMENT_DICTIONARY_SERVICE = "transactionalDocumentDictionaryService";
-
-    public static TransactionalDocumentDictionaryService getTransactionalDocumentDictionaryService() {
-	return (TransactionalDocumentDictionaryService) getService(TRANSACTIONAL_DOCUMENT_DICTIONARY_SERVICE);
-    }
-
-    public static final String MAINTENANCE_DOCUMENT_DICTIONARY_SERVICE = "maintenanceDocumentDictionaryService";
-
-    public static MaintenanceDocumentDictionaryService getMaintenanceDocumentDictionaryService() {
-	return (MaintenanceDocumentDictionaryService) getService(MAINTENANCE_DOCUMENT_DICTIONARY_SERVICE);
-    }
-
-    public static final String DATA_DICTIONARY_SERVICE = "dataDictionaryService";
-
-    public static DataDictionaryService getDataDictionaryService() {
-	return (DataDictionaryService) getService(DATA_DICTIONARY_SERVICE);
-    }
-
-    public static final String MAINTENANCE_DOCUMENT_SERVICE = "maintenanceDocumentService";
-
-    public static MaintenanceDocumentService getMaintenanceDocumentService() {
-	return (MaintenanceDocumentService) getService(MAINTENANCE_DOCUMENT_SERVICE);
-    }
-
-    public static final String NOTE_SERVICE = "noteService";
-
-    public static NoteService getNoteService() {
-	return (NoteService) getService(NOTE_SERVICE);
-    }
-
-    public static final String PERSISTENCE_SERVICE = "persistenceService";
-
-    public static PersistenceService getPersistenceService() {
-	return (PersistenceService) getService(PERSISTENCE_SERVICE);
-    }
-
-    public static final String PERSISTENCE_STRUCTURE_SERVICE = "persistenceStructureService";
-
-    public static PersistenceStructureService getPersistenceStructureService() {
-	return (PersistenceStructureService) getService(PERSISTENCE_STRUCTURE_SERVICE);
-    }
-
-    public static final String KUALI_RULE_SERVICE = "kualiRuleService";
-
-    public static KualiRuleService getKualiRuleService() {
-	return (KualiRuleService) getService(KUALI_RULE_SERVICE);
-    }
-
-    public static final String BUSINESS_OBJECT_SERVICE = "businessObjectService";
-
-    public static BusinessObjectService getBusinessObjectService() {
-	return (BusinessObjectService) getService(BUSINESS_OBJECT_SERVICE);
-    }
-
-    // special ones for Inquirable and Lookupable
-    public static final String KUALI_INQUIRABLE = "kualiInquirable";
-
-    public static Inquirable getKualiInquirable() {
-	return (Inquirable) getService(KUALI_INQUIRABLE);
-    }
-
-    public static final String KUALI_LOOKUPABLE = "kualiLookupable";
-
-    public static Lookupable getKualiLookupable() {
-	return (Lookupable) getService(KUALI_LOOKUPABLE);
-    }
-
-    public static final String GL_LOOKUPABLE = "glLookupable";
-
-    public static Lookupable getGLLookupable() {
-	return (Lookupable) getService(GL_LOOKUPABLE);
-    }
-
-    public static Lookupable getLookupable(String lookupableName) {
-	return (Lookupable) getService(lookupableName);
-    }
-
-    // special one for QuestionPrompt
-    public static Question getQuestion(String questionName) {
-	return (Question) getService(questionName);
-    }
-
-    // DictionaryValidationService
-    public static final String DICTIONARY_VALIDATION_SERVICE = "dictionaryValidationService";
-
-    public static DictionaryValidationService getDictionaryValidationService() {
-	return (DictionaryValidationService) getService(DICTIONARY_VALIDATION_SERVICE);
-    }
-
-    // AuthorizationService
-    public static final String AUTHORIZATION_SERVICE = "authorizationService";
-
-    public static AuthorizationService getAuthorizationService() {
-	return (AuthorizationService) getService(AUTHORIZATION_SERVICE);
-    }
-
-    // AttachmentService
-    public static final String ATTACHMENT_SERVICE = "attachmentService";
-
-    public static AttachmentService getAttachmentService() {
-	return (AttachmentService) getService(ATTACHMENT_SERVICE);
-    }
-
-    // DocumentAuthorizationService
-    public static final String DOCUMENT_AUTHORIZATION_SERVICE = "documentAuthorizationService";
-
-    public static DocumentAuthorizationService getDocumentAuthorizationService() {
-	return (DocumentAuthorizationService) getService(DOCUMENT_AUTHORIZATION_SERVICE);
-    }
-
-    // SequenceAccessorService
-    public static final String SEQUENCE_ACCESSOR_SERVICE = "sequenceAccessorService";
-
-    public static SequenceAccessorService getSequenceAccessorService() {
-	return (SequenceAccessorService) getService(SEQUENCE_ACCESSOR_SERVICE);
-    }
-
-    // KeyValuesService
-    public static final String KEY_VALUES_SERVICE = "keyValuesService";
-
-    public static KeyValuesService getKeyValuesService() {
-	return (KeyValuesService) getService(KEY_VALUES_SERVICE);
-    }
-
-    public static final String OJB_COLLECTION_HELPER = "ojbCollectionHelper";
-
-    public static OjbCollectionHelper getOjbCollectionHelper() {
-	return (OjbCollectionHelper) getService(OJB_COLLECTION_HELPER);
-    }
-
-    public static final String PERSISTENCE_CACHE_ADMINISTRATOR = "persistenceCacheAdministrator";
-
-    public static final GeneralCacheAdministrator getPersistenceCacheAdministrator() {
-	return (GeneralCacheAdministrator) getService(PERSISTENCE_CACHE_ADMINISTRATOR);
-    }
-
-    public static final String TRANSACTION_MANAGER = "transactionManager";
-
-    public static PlatformTransactionManager getTransactionManager() {
-	return (PlatformTransactionManager) getService(TRANSACTION_MANAGER);
-    }
-
-    public static final String TRANSACTION_TEMPLATE = "transactionTemplate";
-
-    public static TransactionTemplate getTransactionTemplate() {
-	return (TransactionTemplate) getService(TRANSACTION_TEMPLATE);
-    }
-        
-    public static final String PESSIMISTIC_LOCK_SERVICE = "pessimisticLockService";
-    
-    public static PessimisticLockService getPessimisticLockService() {
-        return (PessimisticLockService) getService(PESSIMISTIC_LOCK_SERVICE);
-    }
-    
-    public static final String DOCUMENT_SERIALIZER_SERVICE = "documentSerializerService";
-    
-    public static DocumentSerializerService getDocumentSerializerService() {
-        return (DocumentSerializerService) getService(DOCUMENT_SERIALIZER_SERVICE);
-    }
-    
-    public static final String ENTITY_MANAGER_FACTORY = "entityManagerFactory";
-
-    public static EntityManagerFactory getEntityManagerFactory() {
-    	return (EntityManagerFactory) getService(ENTITY_MANAGER_FACTORY);
-    }
-
-    public static final String PERSISTENCE_SERVICE_OJB = "persistenceServiceOjb";
-    
-    public static PersistenceService getPersistenceServiceOjb() {
-        return (PersistenceService) getService(PERSISTENCE_SERVICE_OJB);
-    }
-    
-    public static final String SESSION_DOCUMENT_SERVICE = "sessionDocumentService";
-
-    public static SessionDocumentService getSessionDocumentService() {
-	return (SessionDocumentService) getService(SESSION_DOCUMENT_SERVICE);
-    }
-
-    public static final String DEFAULT_INACTIVATION_BLOCKING_DETECTION_SERVICE = "inactivationBlockingDetectionService";
-    
-    public static InactivationBlockingDetectionService getInactivationBlockingDetectionService(String serviceName) {
-        return (InactivationBlockingDetectionService) getService(serviceName);
-    }
-    
-    public static final String INACTIVATION_BLOCKING_DISPLAY_SERVICE = "inactivationBlockingDisplayService";
-    
-    public static InactivationBlockingDisplayService getInactivationBlockingDisplayService() {
-    	return (InactivationBlockingDisplayService) getService(INACTIVATION_BLOCKING_DISPLAY_SERVICE);
-    }
-    
-    public static final String SERIALIZER_SERVICE = "businessObjectSerializerService";
-    
-    public static BusinessObjectSerializerService getBusinessObjectSerializerService() {
-        return (BusinessObjectSerializerService) getService(SERIALIZER_SERVICE);
-    }
-
-}
-
+
+    public static final String WORKFLOW_DOCUMENT_SERVICE = "workflowDocumentService";
+
+    public static WorkflowDocumentService getWorkflowDocumentService() {
+	return (WorkflowDocumentService) getService(WORKFLOW_DOCUMENT_SERVICE);
+    }
+
+    public static final String WORKFLOW_INFO_SERVICE = "workflowInfoService";
+
+    public static KualiWorkflowInfo getWorkflowInfoService() {
+	return (KualiWorkflowInfo) getService(WORKFLOW_INFO_SERVICE);
+    }
+
+    public static final String KUALI_CONFIGURATION_SERVICE = "kualiConfigurationService";
+
+    public static KualiConfigurationService getKualiConfigurationService() {
+	return (KualiConfigurationService) getService(KUALI_CONFIGURATION_SERVICE);
+    }
+
+    public static final String BUSINESS_OBJECT_DICTIONARY_SERVICE = "businessObjectDictionaryService";
+
+    public static BusinessObjectDictionaryService getBusinessObjectDictionaryService() {
+	return (BusinessObjectDictionaryService) getService(BUSINESS_OBJECT_DICTIONARY_SERVICE);
+    }
+
+    public static final String BUSINESS_OBJECT_METADATA_SERVICE = "businessObjectMetaDataService";
+
+    public static BusinessObjectMetaDataService getBusinessObjectMetaDataService() {
+	return (BusinessObjectMetaDataService) getService(BUSINESS_OBJECT_METADATA_SERVICE);
+    }
+
+    public static final String TRANSACTIONAL_DOCUMENT_DICTIONARY_SERVICE = "transactionalDocumentDictionaryService";
+
+    public static TransactionalDocumentDictionaryService getTransactionalDocumentDictionaryService() {
+	return (TransactionalDocumentDictionaryService) getService(TRANSACTIONAL_DOCUMENT_DICTIONARY_SERVICE);
+    }
+
+    public static final String MAINTENANCE_DOCUMENT_DICTIONARY_SERVICE = "maintenanceDocumentDictionaryService";
+
+    public static MaintenanceDocumentDictionaryService getMaintenanceDocumentDictionaryService() {
+	return (MaintenanceDocumentDictionaryService) getService(MAINTENANCE_DOCUMENT_DICTIONARY_SERVICE);
+    }
+
+    public static final String DATA_DICTIONARY_SERVICE = "dataDictionaryService";
+
+    public static DataDictionaryService getDataDictionaryService() {
+	return (DataDictionaryService) getService(DATA_DICTIONARY_SERVICE);
+    }
+
+    public static final String MAINTENANCE_DOCUMENT_SERVICE = "maintenanceDocumentService";
+
+    public static MaintenanceDocumentService getMaintenanceDocumentService() {
+	return (MaintenanceDocumentService) getService(MAINTENANCE_DOCUMENT_SERVICE);
+    }
+
+    public static final String NOTE_SERVICE = "noteService";
+
+    public static NoteService getNoteService() {
+	return (NoteService) getService(NOTE_SERVICE);
+    }
+
+    public static final String PERSISTENCE_SERVICE = "persistenceService";
+
+    public static PersistenceService getPersistenceService() {
+	return (PersistenceService) getService(PERSISTENCE_SERVICE);
+    }
+
+    public static final String PERSISTENCE_STRUCTURE_SERVICE = "persistenceStructureService";
+
+    public static PersistenceStructureService getPersistenceStructureService() {
+	return (PersistenceStructureService) getService(PERSISTENCE_STRUCTURE_SERVICE);
+    }
+
+    public static final String KUALI_RULE_SERVICE = "kualiRuleService";
+
+    public static KualiRuleService getKualiRuleService() {
+	return (KualiRuleService) getService(KUALI_RULE_SERVICE);
+    }
+
+    public static final String BUSINESS_OBJECT_SERVICE = "businessObjectService";
+
+    public static BusinessObjectService getBusinessObjectService() {
+	return (BusinessObjectService) getService(BUSINESS_OBJECT_SERVICE);
+    }
+
+    // special ones for Inquirable and Lookupable
+    public static final String KUALI_INQUIRABLE = "kualiInquirable";
+
+    public static Inquirable getKualiInquirable() {
+	return (Inquirable) getService(KUALI_INQUIRABLE);
+    }
+
+    public static final String KUALI_LOOKUPABLE = "kualiLookupable";
+
+    public static Lookupable getKualiLookupable() {
+	return (Lookupable) getService(KUALI_LOOKUPABLE);
+    }
+
+    public static final String GL_LOOKUPABLE = "glLookupable";
+
+    public static Lookupable getGLLookupable() {
+	return (Lookupable) getService(GL_LOOKUPABLE);
+    }
+
+    public static Lookupable getLookupable(String lookupableName) {
+	return (Lookupable) getService(lookupableName);
+    }
+
+    // special one for QuestionPrompt
+    public static Question getQuestion(String questionName) {
+	return (Question) getService(questionName);
+    }
+
+    // DictionaryValidationService
+    public static final String DICTIONARY_VALIDATION_SERVICE = "dictionaryValidationService";
+
+    public static DictionaryValidationService getDictionaryValidationService() {
+	return (DictionaryValidationService) getService(DICTIONARY_VALIDATION_SERVICE);
+    }
+
+    // AuthorizationService
+    public static final String AUTHORIZATION_SERVICE = "authorizationService";
+
+    public static AuthorizationService getAuthorizationService() {
+	return (AuthorizationService) getService(AUTHORIZATION_SERVICE);
+    }
+
+    // AttachmentService
+    public static final String ATTACHMENT_SERVICE = "attachmentService";
+
+    public static AttachmentService getAttachmentService() {
+	return (AttachmentService) getService(ATTACHMENT_SERVICE);
+    }
+
+    // DocumentAuthorizationService
+    public static final String DOCUMENT_AUTHORIZATION_SERVICE = "documentAuthorizationService";
+
+    public static DocumentAuthorizationService getDocumentAuthorizationService() {
+	return (DocumentAuthorizationService) getService(DOCUMENT_AUTHORIZATION_SERVICE);
+    }
+
+    // SequenceAccessorService
+    public static final String SEQUENCE_ACCESSOR_SERVICE = "sequenceAccessorService";
+
+    public static SequenceAccessorService getSequenceAccessorService() {
+	return (SequenceAccessorService) getService(SEQUENCE_ACCESSOR_SERVICE);
+    }
+
+    // KeyValuesService
+    public static final String KEY_VALUES_SERVICE = "keyValuesService";
+
+    public static KeyValuesService getKeyValuesService() {
+	return (KeyValuesService) getService(KEY_VALUES_SERVICE);
+    }
+
+    public static final String OJB_COLLECTION_HELPER = "ojbCollectionHelper";
+
+    public static OjbCollectionHelper getOjbCollectionHelper() {
+	return (OjbCollectionHelper) getService(OJB_COLLECTION_HELPER);
+    }
+
+    public static final String PERSISTENCE_CACHE_ADMINISTRATOR = "persistenceCacheAdministrator";
+
+    public static final GeneralCacheAdministrator getPersistenceCacheAdministrator() {
+	return (GeneralCacheAdministrator) getService(PERSISTENCE_CACHE_ADMINISTRATOR);
+    }
+
+    public static final String TRANSACTION_MANAGER = "transactionManager";
+
+    public static PlatformTransactionManager getTransactionManager() {
+	return (PlatformTransactionManager) getService(TRANSACTION_MANAGER);
+    }
+
+    public static final String TRANSACTION_TEMPLATE = "transactionTemplate";
+
+    public static TransactionTemplate getTransactionTemplate() {
+	return (TransactionTemplate) getService(TRANSACTION_TEMPLATE);
+    }
+        
+    public static final String PESSIMISTIC_LOCK_SERVICE = "pessimisticLockService";
+    
+    public static PessimisticLockService getPessimisticLockService() {
+        return (PessimisticLockService) getService(PESSIMISTIC_LOCK_SERVICE);
+    }
+    
+    public static final String DOCUMENT_SERIALIZER_SERVICE = "documentSerializerService";
+    
+    public static DocumentSerializerService getDocumentSerializerService() {
+        return (DocumentSerializerService) getService(DOCUMENT_SERIALIZER_SERVICE);
+    }
+    
+    public static final String ENTITY_MANAGER_FACTORY = "entityManagerFactory";
+
+    public static EntityManagerFactory getEntityManagerFactory() {
+    	return (EntityManagerFactory) getService(ENTITY_MANAGER_FACTORY);
+    }
+
+    public static final String PERSISTENCE_SERVICE_OJB = "persistenceServiceOjb";
+    
+    public static PersistenceService getPersistenceServiceOjb() {
+        return (PersistenceService) getService(PERSISTENCE_SERVICE_OJB);
+    }
+    
+    public static final String SESSION_DOCUMENT_SERVICE = "sessionDocumentService";
+
+    public static SessionDocumentService getSessionDocumentService() {
+	return (SessionDocumentService) getService(SESSION_DOCUMENT_SERVICE);
+    }
+
+    public static final String DEFAULT_INACTIVATION_BLOCKING_DETECTION_SERVICE = "inactivationBlockingDetectionService";
+    
+    public static InactivationBlockingDetectionService getInactivationBlockingDetectionService(String serviceName) {
+        return (InactivationBlockingDetectionService) getService(serviceName);
+    }
+    
+    public static final String INACTIVATION_BLOCKING_DISPLAY_SERVICE = "inactivationBlockingDisplayService";
+    
+    public static InactivationBlockingDisplayService getInactivationBlockingDisplayService() {
+    	return (InactivationBlockingDisplayService) getService(INACTIVATION_BLOCKING_DISPLAY_SERVICE);
+    }
+    
+    public static final String SERIALIZER_SERVICE = "businessObjectSerializerService";
+    
+    public static BusinessObjectSerializerService getBusinessObjectSerializerService() {
+        return (BusinessObjectSerializerService) getService(SERIALIZER_SERVICE);
+    }
+    
+    public static final String COUNTRY_SERVICE = "countryService";
+
+    public static CountryService getCountryService() {
+	return (CountryService) getService(COUNTRY_SERVICE);
+    }
+    
+    public static final String STATE_SERVICE = "stateService";
+
+    public static StateService getStateService() {
+	return (StateService) getService(STATE_SERVICE);
+    }
+
+}
Index: impl/src/main/config/xml/RiceBootstrapData.xml
===================================================================
--- impl/src/main/config/xml/RiceBootstrapData.xml	(revision 5087)
+++ impl/src/main/config/xml/RiceBootstrapData.xml	(working copy)
@@ -1252,9 +1252,53 @@
         </start>
       </routeNodes>
     </documentType>
-
-  
 
+    <documentType>
+      <name>CountryMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>Country</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>   
+    <documentType>
+      <name>CountyMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>County</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>
+    <documentType>
+      <name>StateMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>State</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>
+    <documentType>
+      <name>PostalCodeMaintenanceDocument</name>
+      <parent>KualiSimpleMaintenanceDocument</parent>
+      <label>Postal Code</label>
+      <postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</postProcessorName>
+      <superUserWorkgroupName>SY_FUNCTIONAL_SUPER_USERS</superUserWorkgroupName>
+      <blanketApproveWorkgroupName>SY_MAINTENANCE_USERS</blanketApproveWorkgroupName>
+      <docHandler>${kr.url}/maintenance.do?methodToCall=docHandler</docHandler>
+      <active>true</active>
+      <routingVersion>1</routingVersion>
+    </documentType>
+    
+ 
     </documentTypes>
 
     <rules xmlns="ns:workflow/Rule" xsi:schemaLocation="ns:workflow/Rule resource:Rule">
Index: impl/src/main/java/org/kuali/rice/kns/service/CountyService.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/service/CountyService.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/service/CountyService.java	(revision 0)
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2008 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.service;
+
+import org.kuali.rice.kns.bo.County;
+import org.kuali.rice.kns.bo.BusinessObject;
+
+public interface CountyService {
+
+    /**
+     * get a county object based on the given county code, state code and default country code. The default country code is set up
+     * in the system.
+     * 
+     * @param postalStateCode the given state code
+     * @param countyCode the given state code
+     * @return a county object based on the given county code, state code and default country code
+     */
+    public County getByPrimaryId(String postalStateCode, String countyCode);
+
+    /**
+     * get a county object based on the given county code, state code and country code.
+     * 
+     * @param postalCountryCode the given country code
+     * @param postalStateCode the given state code
+     * @param countyCode the given state code
+     * @return a county object based on the given county code, state code and country code
+     */
+    public County getByPrimaryId(String postalCountryCode, String postalStateCode, String countyCode);
+
+    /**
+     * get a county object based on the given county code, state code and default country code. The default country code is set up
+     * in the system. If the given postal state code and county code are same as those of the given existing county, return the
+     * existing county; otherwise, retrieve a county object.
+     * 
+     * @param postalStateCode the given state code
+     * @param countyCode the given state code
+     * @param existingCounty the given existing county
+     * @return a county object based on the given county code, state code and default country code if necessary
+     */
+    public County getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalStateCode, String countyCode, County existingCounty);
+
+    /**
+     * get a county object based on the given county code, state code and default country code. The default country code is set up
+     * in the system. If the given postal country code, state code and county code are same as those of the given existing county,
+     * return the existing county; otherwise, retrieve a county object.
+     * 
+     * @param postalCountryCode the given country code
+     * @param postalStateCode the given state code
+     * @param countyCode the given state code
+     * @param existingCounty the given existing county
+     * @return a county object based on the given county code, state code and country code if necessary
+     */
+    public County getByPrimaryIdIfNecessary(BusinessObject businessObject, String postalCountryCode, String postalStateCode, String countyCode, County existingCounty);
+}
Index: impl/src/main/java/org/kuali/rice/kns/bo/options/CountryValuesFinder.java
===================================================================
--- impl/src/main/java/org/kuali/rice/kns/bo/options/CountryValuesFinder.java	(revision 0)
+++ impl/src/main/java/org/kuali/rice/kns/bo/options/CountryValuesFinder.java	(revision 0)
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2007 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.rice.kns.bo.options;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.commons.lang.StringUtils;
+import org.kuali.rice.kns.bo.Country;
+import org.kuali.rice.kns.service.KNSServiceLocator;
+import org.kuali.rice.kns.service.CountryService;
+import org.kuali.rice.kns.lookup.keyvalues.KeyValuesBase;
+import org.kuali.rice.kns.web.ui.KeyLabelPair;
+
+/**
+ * This class returns list of country value pairs.
+ */
+public class CountryValuesFinder extends KeyValuesBase {
+
+    /*
+     * @see org.kuali.keyvalues.KeyValuesFinder#getKeyValues()
+     */
+    public List getKeyValues() {
+        List<Country> boList = KNSServiceLocator.getCountryService().findAllCountries();
+        List<KeyLabelPair> keyValues = new ArrayList<KeyLabelPair>();
+
+        Country defaultCountry = null;
+        for (Country element : boList) {
+            String defaultCountryCode = KNSServiceLocator.getCountryService().getDefaultCountry().getPostalCountryCode();
+            
+            // Find default country code and pull it out so we can set it first in the results list later.
+            if (StringUtils.equals(defaultCountryCode, element.getPostalCountryCode())) {
+                defaultCountry = element;
+            }
+            else {
+                if(element.isActive()) {
+                    keyValues.add(new KeyLabelPair(element.getPostalCountryCode(), element.getPostalCountryName()));
+                }
+            }
+        }
+
+        List<KeyLabelPair> keyValueUSFirst = new ArrayList<KeyLabelPair>();
+        keyValueUSFirst.add(new KeyLabelPair("", ""));
+        keyValueUSFirst.add(new KeyLabelPair(defaultCountry.getPostalCountryCode(), defaultCountry.getPostalCountryName()));
+        keyValueUSFirst.addAll(keyValues);
+
+        return keyValueUSFirst;
+    }
+
+}
